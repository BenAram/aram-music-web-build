{"version":3,"sources":["components/Header/styles.ts","styles/global.ts","components/AudioController/styles.ts","services/url.ts","services/api.ts","components/AudioController/index.tsx","components/ContextMenu/index.ts","pages/Chat/styles.ts","pages/Chat/index.tsx","pages/Genre/styles.ts","components/ContextMenuMusic/index.tsx","images/logo.png","pages/Genre/index.tsx","pages/Home/styles.ts","pages/Home/index.tsx","pages/Music/styles.ts","pages/Music/index.tsx","pages/MyMusics/styles.ts","pages/MyMusics/index.tsx","pages/Playlist/styles.ts","pages/Playlist/index.tsx","pages/Search/styles.ts","pages/Search/index.tsx","pages/Me/styles.ts","components/Divider/index.ts","pages/Me/index.tsx","pages/Upload/styles.ts","pages/Upload/index.tsx","pages/User/index.tsx","pages/NotFound/styles.ts","pages/NotFound/index.tsx","pages/App/styles.ts","pages/App/index.tsx","pages/Landing/styles.ts","components/Checkbox/styles.ts","components/Checkbox/index.tsx","pages/Landing/index.tsx","routes/index.tsx","store/reducers/actualIndex.reducer.ts","store/reducers/audio.reducer.ts","store/reducers/music.reducer.ts","store/reducers/musicIsLoaded.reducer.ts","store/reducers/musicType.reducer.ts","store/reducers/playlist.reducer.ts","store/reducers/playlists.reducer.ts","store/reducers/updates.reducer.ts","store/index.ts","App.tsx","index.tsx","components/Header/index.tsx"],"names":["Container","styled","div","OperationButtonContainer","process","platform","OperationButton","button","props","color","hover","active","DragArea","Title","p","OperationButtonOther","GlobalStyle","createGlobalStyle","MusicInfoContainer","MusicInfoImage","img","MusicNameContainer","MusicName","h3","MusicAuthor","span","MusicControllerContainer","PlaylistName","MusicControllerButtonsContainer","MusicTimeContainer","MusicTimeSpan","MusicTimeSliderContainer","MusicTimeSliderSpan","duration","width","currentTime","ControllerContainer","ControllerButton","api","axios","create","baseURL","url","AudioController","email","localStorage","getItem","token","audio","useSelector","store","music","playlist","dispatch","useDispatch","history","useHistory","useState","volume","setVolume","paused","setPaused","looping","setLooping","setCurrentTime","setDuration","treatTime","timeInSeconds","time","Math","floor","minutes","seconds","goNextMusic","index","musics","length","musicsJSON","sessionStorage","JSON","parse","getMusic","a","get","data","error","type","payload","splice","setItem","stringify","alert","listeners","play","err","useEffect","isPlaylist","pause","name_upload","headers","then","catch","volumeStorage","addEventListener","removeEventListener","removeItem","onClick","push","id","src","music_background","name","user_owner","size","loop","axis","x","xstep","xmin","xmax","onChange","params","styles","track","backgroundColor","cursor","thumb","height","config","getVolumeIcon","ContextMenuContainer","y","ContextMenuItem","ContextMenuTextContainer","ContextMenuDivider","ContextMenuText","Header","header","Main","main","Footer","footer","InputContainer","InputMessage","input","initialStateFriend","avatar","online","Chat","friend","setFriend","friendship","from","me","to","placeholder","ReturnContainer","ReturnButton","PlayerContainer","InfoContainer","InfoImg","InfoMusicContainer","InfoName","ErrorContainer","ErrorMessage","InfoMusics","PlayButton","MusicsContainer","MusicItem","MusicConfig","MusicImage","ContextMenuMusic","musicIsLoaded","playlists","setIsPlaylist","handlePlayMusic","setTimeout","saveMusic","patch","message","visible","style","fill","onMouseEnter","onMouseLeave","map","initialState","access","description","keywords","createdAt","editable","Playlist","useParams","contextMenu","setContextMenu","contextMenuCoordinates","setContextMenuCoordinates","contextMenuMusic","setContextMenuMusic","setError","errorMessage","setErrorMessage","hasImg","setHasImg","setMusics","treatTypeName","toUpperCase","slice","handleContextMenu","evt","click","window","innerHeight","document","run","getImg","goBack","logo","onMouseDown","textAlign","h2","MusicItemImage","MusicItemButton","MusicItemName","Home","contextMenuVisible","setContextMenuVisible","actualMusic","setActualMusic","handleSeeMusic","handleMouseDown","playMusic","sortMusic","music1","music2","divider","musics1","musics2","musics3","musics4","musics5","sort","onDoubleClick","label","cwidth","Input","MainImg","MainInfoContainer","MainInfo","MainInfoAvatarContainer","MainInfoAvatar","MainInfoName","MainPlayContainer","MainPlayType","MainPlayButton","FooterItem","Music","nameInput","useRef","descriptionInput","keywordsInput","loaded","setLoaded","setMusic","initialName","setInitialName","setName","initialDescription","setInitialDescription","setDescription","initialKeywords","setInitialKeywords","setKeywords","title","join","keydown","code","current","blur","justifyContent","alignItems","ref","maxLength","onBlur","e","target","value","handleOpenUserPage","treatType","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","getMinutes","shrink","MusicInfo","MusicImg","initialStateCoordinates","MyMusics","myMusics","setMyMusics","handleDeleteMusic","delete","newMyMusics","myMusic","hasImage","InfoNameInput","MusicDrag","initialStatePlaylist","public","actualIndex","setPlaylist","owner","setOwner","handleKeyDown","newName","handleMoveMusic","newMusics","newIndex","focus","SearchContainer","SearchButton","SearchInput","MusicTypeButtonContainer","MusicTypeButton","MusicTypeButtonName","MusicTypeButtonImage","Search","musicTypes","setMusicTypes","searchValue","setSearchValue","musicType","AvatarImageContainer","AvatarImage","AvatarInput","UserInput","SaveButton","OperationContainer","OperationLeave","OperationDelete","Divider","customWidth","User","avatarInput","updates","setUpdates","setAvatar","setEmail","password","setPassword","newPassword","setNewPassword","initialAvatar","setInitialAvatar","initialEmail","setInitialEmail","loading","setLoading","formData","FormData","append","files","clean","uri","accept","file","fileReader","FileReader","onloadend","result","readAsDataURL","disabled","HeaderImg","HeaderText","InputTitle","InputDiv","TextArea","textarea","RadioContainer","RadioItem","RadioInput","RadioInputDiv","ButtonInput","Button","ButtonImg","SuccessContainer","SuccessMessage","SaveButtonText","Upload","imageInput","audioInput","setType","image","setImage","setAudio","success","setSuccess","post","alt","addable","friends","setUser","inserted","h1","NotFound","AppContainer","AppSelector","AppSelectorButton","NavContainer","nav","NavButtonContainer","NavButton","NavButtonText","selected","NavSubtitleContainer","NavSubtitle","NavPlaylistContainer","NavPlaylistItem","NavPlaylistImage","NavPlaylistImageDiv","NavPlaylistInfoContainer","NavPlaylistInput","NavPlaylistName","strong","NavPlaylistInfo","ContentContainer","NoFriendContainer","NoFriendImage","NoFriendText","FriendsContainer","FriendsButtonContainer","FriendButton","FriendAvatarContainer","FriendAvatarImage","FriendStatusContainer","FriendStatus","FriendNameContainer","FriendNameText","FriendMessageText","new","Text","initialStateFriendship","accepted","messages","App","desktop","location","useLocation","playlistsStore","playlistName","setPlaylistName","indexSelected","setIndexSelected","setPlaylists","createPlaylistInput","createPlaylist","setCreatePlaylist","createPlaylistName","setCreatePlaylistName","socket","setSocket","setMe","friendships","setFriendships","myRequests","setMyRequests","friendsRequests","setFriendsRequests","messagesNotSeen","setMessagesNotSeen","openedChat","setOpenedChat","openedChatFriendship","setOpenedChatFriendship","mode","path","appSelection","setAppSelection","pathname","replace","selectApp","newMode","navigate","pageName","renamePlaylist","handleGoPlaylist","handleContextMenuPlaylist","public_playlist","startsWith","newAppSelection","newPlaylists","newMyRequest","newFriendRequest","friendAccepted","newMessagesNotSeen","findIndex","newFriendships","seen","newUnseenMessages","usersConfigJSON","usersConfig","notifications","messageDeleted","messageId","find","undefined","index1","index2","newAvatar","userConnected","newFriendship","userDisconnected","userDeleted","newFriendsRequests","newMyRequests","friendDeleted","index3","removeAllListeners","on","preventDefault","keyDown","newMessages","filter","requests","io","transportOptions","polling","extraHeaders","exact","component","HomePage","Genre","MusicPage","SearchPage","UploadPage","Me","children","friendship1","friendship2","time1","date","getTime","time2","actualAvatar","actualUser","actualMessage","myFriendship","messageIndex","unseenMessageIndex","indexOf","handleOpenChat","content","LoadingContainer","LoadingImage","Logo","Interface","InputLabel","TextInput","LoginContainer","CheckboxLabel","CheckboxP","LoginButton","LoginText","CreateAccountButton","CheckboxInput","UncheckedDiv","CheckedDiv","Checkbox","checked","setChecked","Landing","confirmPassword","setConfirmPassword","createAccount","setCreateAccount","rememberMe","setRememberMe","didMount","setDidMount","Router","ActualIndexReducer","state","actions","Audio","AudioReducer","MusicReducer","MusicIsLoadedReducer","isType","MusicTypeReducer","PlaylistReducer","PlaylistsReducer","playlists2","playlists3","playlists4","playlists5","playlists6","Updates","reducers","combineReducers","createStore","ReactDOM","render","StrictMode","getElementById","handleOperate","remote","currentWindow","getCurrentWindow","close","minimize","isMaximized","restore","maximize","marginBottom"],"mappings":"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","file":"static/js/main.f04e0846.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #3e3e3e;\r\n\r\n    border-bottom: 1px solid #d9dadc;\r\n\r\n    display: flex;\r\n\r\n    box-sizing: border-box;\r\n    padding: 5px;\r\n`\r\n\r\nexport const OperationButtonContainer = styled.div`\r\n    width: ${() => process.platform !== 'darwin' ? 60 : 100}px;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\n\r\nexport const OperationButton: any = styled.button`\r\n    width: 15px;\r\n    height: 15px;\r\n    border-radius: 50%;\r\n\r\n    background-color: ${(props: any) => props.color};\r\n\r\n    &:hover {\r\n        background-color: ${(props: any) => props.hover};\r\n    }\r\n\r\n    &:active {\r\n        background-color: ${(props: any) => props.active};\r\n    }\r\n`\r\n\r\nexport const DragArea = styled.div`\r\n    flex: 1;\r\n    \r\n    -webkit-user-select: none;\r\n    -webkit-app-region: drag;\r\n`\r\n\r\nexport const Title = styled.p`\r\n    color: #d9dadc;\r\n    text-align: ${() => process.platform !== 'darwin' ? 'right' : 'left'};\r\n    margin: 0 10px;\r\n`\r\n\r\nexport const OperationButtonOther = styled.button`\r\n    width: 30px;\r\n    height: 30px;\r\n    background-color: transparent;\r\n\r\n    font-size: 40px;\r\n    color: #4c43df;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    margin: 0 5px;\r\n`","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        border: none;\r\n        outline: none;\r\n        font-family: 'Nunito', Arial, Helvetica, sans-serif;\r\n    }\r\n\r\n    button, input, textarea {\r\n        font-family: 'Nunito', Arial, Helvetica, sans-serif;\r\n        background-color: transparent;\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nexport default GlobalStyle","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 100px;\r\n    background-color: #000;\r\n\r\n    display: flex;\r\n`\r\n\r\nexport const MusicInfoContainer: any = styled.div`\r\n    width: 25%;\r\n    height: 100%;\r\n\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n\r\n    display: flex;\r\n\r\n    cursor: pointer;\r\n`\r\n\r\nexport const MusicInfoImage = styled.img`\r\n    width: 100px;\r\n    height: 50px;\r\n    margin-right: 5px;\r\n`\r\n\r\nexport const MusicNameContainer = styled.div`\r\n    flex: 1;\r\n    height: 50px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const MusicName = styled.h3`\r\n    color: #d9dadc;\r\n    font-size: 16px;\r\n`\r\n\r\nexport const MusicAuthor = styled.span`\r\n    color: #6e6e6e;\r\n`\r\n\r\nexport const MusicControllerContainer = styled.div`\r\n    width: 50%;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const PlaylistName = styled.p`\r\n    color: #d9dadc;\r\n    text-align: center;\r\n`\r\n\r\nexport const MusicControllerButtonsContainer = styled.div`\r\n    width: 100%;\r\n    height: 50%;\r\n    \r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    & > button {\r\n        margin: 0 10px;\r\n    }\r\n`\r\n\r\nexport const MusicTimeContainer = styled.div`\r\n    width: 100%;\r\n    height: 50%;\r\n\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const MusicTimeSpan = styled.span`\r\n    color: #d9dadc;\r\n`\r\n\r\nexport const MusicTimeSliderContainer = styled.div`\r\n    width: 300px;\r\n    margin: 0 5px;\r\n`\r\n\r\nexport const MusicTimeSliderSpan: any = styled.span`\r\n    color: #d9dadc;\r\n\r\n    position: relative;\r\n    bottom: 5px;\r\n    left: ${(props: any) => {\r\n        const { duration, currentTime } = props\r\n        const width = 300\r\n        const currentTimePercent = currentTime / (duration / 100)\r\n        return ((width / 100) * currentTimePercent) - 15\r\n    }}px;\r\n`\r\n\r\nexport const ControllerContainer = styled.div`\r\n    width: 25%;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    position: relative;\r\n\r\n    & > svg {\r\n        margin-right: 10px;\r\n    }\r\n`\r\n\r\nexport const ControllerButton = styled.button`\r\n    width: 25px;\r\n    height: 25px;\r\n\r\n    position: absolute;\r\n    left: 85%;\r\n    bottom: 70%;\r\n`","const ip: string = 'aram-music-api.benaram.repl.co'\r\nexport default `https://${ip}`","import axios from 'axios'\r\nimport url from './url'\r\n\r\nconst api = axios.create({\r\n    baseURL: url\r\n})\r\n\r\nexport default api","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Slider from 'react-input-slider'\r\nimport {\r\n    Rewind,\r\n    SkipBack,\r\n    PlayCircle,\r\n    PauseCircle,\r\n    SkipForward,\r\n    FastForward,\r\n    Repeat,\r\n\r\n    Volume,\r\n    Volume1,\r\n    Volume2,\r\n    VolumeX,\r\n\r\n    X\r\n} from 'react-feather'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport {\r\n    Container,\r\n    MusicInfoContainer,\r\n    MusicInfoImage,\r\n    MusicNameContainer,\r\n    MusicName,\r\n    MusicAuthor,\r\n    MusicControllerContainer,\r\n    PlaylistName,\r\n    MusicControllerButtonsContainer,\r\n    MusicTimeContainer,\r\n    MusicTimeSpan,\r\n    MusicTimeSliderContainer,\r\n    MusicTimeSliderSpan,\r\n    ControllerContainer,\r\n    ControllerButton\r\n} from './styles'\r\n\r\nimport api from '../../services/api'\r\nimport url from '../../services/url'\r\n\r\nconst initialState: Music = {\r\n    access: 0,\r\n    createdAt: '',\r\n    description: '',\r\n    editable: false,\r\n    id: 0,\r\n    keywords: [],\r\n    music_background: '',\r\n    name: '',\r\n    name_upload: '',\r\n    type: '',\r\n    user_owner: {\r\n        avatar: '',\r\n        name: '',\r\n        id: 0\r\n    }\r\n}\r\n\r\nfunction AudioController(): JSX.Element {\r\n\r\n    const email = localStorage.getItem('email')\r\n    const token = localStorage.getItem('token')\r\n\r\n    const audio = useSelector((store: any) => store.audio)\r\n    const music: Music = useSelector((store: any) => store.music)\r\n    const playlist: StoreStatePlaylist = useSelector((store: any) => store.playlist)\r\n    const dispatch = useDispatch()\r\n\r\n    const history = useHistory()\r\n\r\n    const [volume, setVolume] = useState<number>(0)\r\n    const [paused, setPaused] = useState<boolean>(false)\r\n    const [looping, setLooping] = useState<boolean>(false)\r\n    const [currentTime, setCurrentTime] = useState<number>(0)\r\n    const [duration, setDuration] = useState<number>(0)\r\n\r\n    function handleSeeMusic() {\r\n        if (playlist.isPlaylist) {\r\n            history.push(`/app/music/${playlist.musics[playlist.index].id}`)\r\n        } else {\r\n            history.push(`/app/music/${music.id}`)\r\n        }\r\n    }\r\n\r\n    function handleRewind(): void {\r\n        if (playlist.isPlaylist) {\r\n            goBackMusic()\r\n        } else {\r\n            audio.currentTime = 0\r\n        }\r\n    }\r\n\r\n    function handleSkipBack(): void {\r\n        audio.currentTime -= 10\r\n    }\r\n\r\n    function handleToggleAudio(): void {\r\n        if (audio.paused) {\r\n            audio.play()\r\n        } else {\r\n            audio.pause()\r\n        }\r\n        setPaused(!paused)\r\n    }\r\n\r\n    function handleAdvance(): void {\r\n        audio.currentTime += 10\r\n    }\r\n\r\n    function handleSkip(): void {\r\n        if (playlist.isPlaylist && !looping) {\r\n            goNextMusic()\r\n        } else {\r\n            audio.currentTime = audio.duration\r\n        }\r\n    }\r\n\r\n    function handleToggleRepeat(): void {\r\n        audio.loop = !audio.loop\r\n        setLooping(!looping)\r\n    }\r\n\r\n    function handleTimeSlider(params: any) {\r\n        const x: number = params.x\r\n        setCurrentTime(x)\r\n        audio.currentTime = x\r\n    }\r\n\r\n    function handleVolumeSlider(params: any) {\r\n        const x: number = params.x\r\n        setVolume(x)\r\n        audio.volume = x\r\n        localStorage.setItem('volume', `${x}`)\r\n    }\r\n\r\n    function handleCloseController(): void {\r\n        dispatch({ type: 'clean-audio' })\r\n        dispatch({ type: 'clean-playlist' })\r\n        dispatch({ type: 'clean-music-is-loaded' })\r\n    }\r\n\r\n    \r\n    function treatTime(timeInSeconds: number): string {\r\n        const time: number = Math.floor(timeInSeconds)\r\n        const minutes: number = Math.floor(time / 60)\r\n        const minutesInSeconds: number = minutes * 60\r\n        const seconds: number = time - minutesInSeconds\r\n        return `${minutes}:${seconds < 10 ? `0${seconds}` : seconds}`\r\n    }\r\n\r\n    function getVolumeIcon(){\r\n        const config = {\r\n            color: \"#d9dadc\",\r\n            size: 25\r\n        }\r\n\r\n        if (volume <= 0) {\r\n            return <VolumeX {...config} />\r\n        }\r\n        if (volume <= 0.5) {\r\n            return <Volume1 {...config} />\r\n        }\r\n        if (volume > 0.5) {\r\n            return <Volume2 {...config} />\r\n        }\r\n\r\n        return <Volume {...config} />\r\n    }\r\n\r\n    function goBackMusic() {\r\n        const { index } = playlist\r\n        if (index - 1 < 0) {\r\n            audio.currentTime = 0\r\n        } else {\r\n            dispatch({ type: 'down-playlist' })\r\n        }\r\n    }\r\n\r\n    function goNextMusic() {\r\n        const { index } = playlist\r\n        if (index + 1 >= playlist.musics.length) {\r\n            const musicsJSON = sessionStorage.getItem('musics')\r\n            if (musicsJSON) {\r\n                const musics = JSON.parse(musicsJSON)\r\n                async function getMusic(){\r\n                    try {\r\n                        let index: number = 0\r\n                        if (musics[index]) {\r\n                            const { data } = await api.get(`/music/${musics[index]}`)\r\n                            if (!data.error) {\r\n                                dispatch({ type: 'disactive-playlist' })\r\n                                dispatch({ type: 'change-music', payload: data })\r\n                                musics.splice(index, 1)\r\n                                sessionStorage.setItem('musics', JSON.stringify(musics))\r\n                            } else {\r\n                                index++\r\n                                getMusic()\r\n                            }\r\n                        }\r\n                    } catch(err) {\r\n                        alert('Ocorreu um erro')\r\n                    }\r\n                }\r\n                getMusic()\r\n            } else {\r\n                setPaused(true)\r\n            }\r\n        } else {\r\n            dispatch({ type: 'up-playlist' })\r\n        }\r\n    }\r\n\r\n\r\n    const listeners = {\r\n        updateTime(){\r\n            setCurrentTime(audio.currentTime)\r\n        },\r\n        loadedMetaData(){\r\n            audio.currentTime = 0\r\n            audio.play()\r\n            setPaused(false)\r\n            setCurrentTime(audio.currentTime)\r\n            setDuration(audio.duration)\r\n            setLooping(false)\r\n        },\r\n        ended() {\r\n            const musicsJSON = sessionStorage.getItem('musics')\r\n            \r\n            let index: number = 0\r\n\r\n            let musics: Array<string> = []\r\n            if (musicsJSON) {\r\n                musics = JSON.parse(musicsJSON)\r\n            }\r\n            if (musics[index]) {\r\n                try {\r\n                    async function getMusic() {\r\n                        if (musics[index]) {\r\n                            const { data } = await api.get(`/music/${musics[index]}`)\r\n                            if (!data.error) {\r\n                                dispatch({ type: 'change-music', payload: data })\r\n                                musics.splice(index, 1)\r\n                                sessionStorage.setItem('musics', JSON.stringify(musics))\r\n                            } else {\r\n                                index++\r\n                                getMusic()\r\n                            }\r\n                        }\r\n                    }\r\n                    getMusic()\r\n                } catch(err) {\r\n                    alert('Ocorreu um erro')\r\n                }\r\n            } else {\r\n                setPaused(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!playlist.isPlaylist) {\r\n            audio.pause()\r\n            dispatch({ type: 'source-audio', payload: music.name_upload })\r\n            api.get(`/audio/access/${music.name_upload}`, {\r\n                headers: {\r\n                    email,\r\n                    token\r\n                }\r\n            }).then().catch()\r\n        }\r\n    }, [music.name_upload, playlist.isPlaylist])\r\n    useEffect(() => {\r\n        if (playlist.isPlaylist) {\r\n            const { index } = playlist\r\n            audio.pause()\r\n            dispatch({ type: 'source-audio', payload: playlist.musics[index].name_upload })\r\n            api.get(`/audio/access/${playlist.musics[index].name_upload}`, {\r\n                headers: {\r\n                    email,\r\n                    token\r\n                }\r\n            }).then().catch()\r\n        }\r\n    }, [playlist.index, playlist.isPlaylist])\r\n\r\n    useEffect(() => {\r\n        function clean(){\r\n            audio.removeEventListener('loadedmetadata', listeners.loadedMetaData)\r\n            audio.removeEventListener('timeupdate', listeners.updateTime)\r\n            audio.removeEventListener('ended', listeners.ended)\r\n            audio.removeEventListener('ended', goNextMusic)\r\n\r\n            dispatch({ type: 'clean-audio' })\r\n            dispatch({ type: 'clean-music' })\r\n            dispatch({ type: 'clean-playlist' })\r\n\r\n            sessionStorage.removeItem('musics')\r\n        }\r\n\r\n        const volumeStorage: any = localStorage.getItem('volume')\r\n\r\n        if (volumeStorage) {\r\n            setVolume(volumeStorage * 1)\r\n            audio.volume = volumeStorage * 1\r\n        } else {\r\n            setVolume(1)\r\n            audio.volume = 1\r\n        }\r\n\r\n        audio.addEventListener('loadedmetadata', listeners.loadedMetaData)\r\n        audio.addEventListener('timeupdate', listeners.updateTime)\r\n        if (playlist.isPlaylist) {\r\n            audio.addEventListener('ended', goNextMusic)\r\n        } else {\r\n            audio.addEventListener('ended', listeners.ended)\r\n        }\r\n        return clean\r\n    }, [])\r\n\r\n    return <Container>\r\n        <MusicInfoContainer onClick={handleSeeMusic}>\r\n            <MusicInfoImage\r\n                src={!playlist.isPlaylist ? `${url}/music-bg/${music.music_background}` :\r\n                `${url}/music-bg/${playlist.musics[playlist.index].music_background}`}\r\n            />\r\n            <MusicNameContainer>\r\n                <MusicName>\r\n                    {!playlist.isPlaylist ? music.name : playlist.musics[playlist.index].name}\r\n                </MusicName>\r\n                <MusicAuthor>\r\n                    {!playlist.isPlaylist ? music.user_owner.name : playlist.musics[playlist.index].user_owner.name}\r\n                </MusicAuthor>\r\n            </MusicNameContainer>\r\n        </MusicInfoContainer>\r\n        <MusicControllerContainer>\r\n            {playlist.isPlaylist ? <PlaylistName>\r\n                <strong>Tocando:{' '}</strong>\r\n                {playlist.name}\r\n            </PlaylistName> : null}\r\n            <MusicControllerButtonsContainer>\r\n                <button onClick={handleRewind}>\r\n                    <Rewind\r\n                        color=\"#d9dadc\"\r\n                        size={25}\r\n                    />\r\n                </button>\r\n                <button onClick={handleSkipBack}>\r\n                    <SkipBack\r\n                        color=\"#d9dadc\"\r\n                        size={25}\r\n                    />\r\n                </button>\r\n                <button onClick={handleToggleAudio}>\r\n                    {paused ? <PlayCircle\r\n                        color=\"#d9dadc\"\r\n                        size={25}\r\n                    /> : <PauseCircle\r\n                        color=\"#d9dadc\"\r\n                        size={25}\r\n                    />}\r\n                </button>\r\n                <button onClick={handleAdvance}>\r\n                    <SkipForward\r\n                        color=\"#d9dadc\"\r\n                        size={25}\r\n                    />\r\n                </button>\r\n                <button onClick={handleSkip}>\r\n                    <FastForward\r\n                        color=\"#d9dadc\"\r\n                        size={25}\r\n                    />\r\n                </button>\r\n                <button onClick={handleToggleRepeat}>\r\n                    <Repeat\r\n                        color={looping ? '#4c43df' : '#d9dadc'}\r\n                        size={25}\r\n                    />\r\n                </button>\r\n            </MusicControllerButtonsContainer>\r\n            <MusicTimeContainer>\r\n                <MusicTimeSpan>0:00</MusicTimeSpan>\r\n                <MusicTimeSliderContainer>\r\n                    <MusicTimeSliderSpan\r\n                        duration={duration}\r\n                        currentTime={currentTime}\r\n                    >\r\n                        {treatTime(currentTime)}\r\n                    </MusicTimeSliderSpan>\r\n                    <Slider\r\n                        axis=\"x\"\r\n                        x={currentTime}\r\n                        xstep={1}\r\n                        xmin={0}\r\n                        xmax={duration}\r\n                        onChange={handleTimeSlider}\r\n                        styles={{\r\n                            track: {\r\n                                width: '100%',\r\n                                backgroundColor: '#d9dadc',\r\n                                cursor: 'pointer'\r\n                            },\r\n                            active: {\r\n                                backgroundColor: '#4c43df'\r\n                            },\r\n                            thumb: {\r\n                                width: 15,\r\n                                height: 15,\r\n                                backgroundColor: '#4c43df'\r\n                            }\r\n                        }}\r\n                    />\r\n                </MusicTimeSliderContainer>\r\n                <MusicTimeSpan>\r\n                    {treatTime(duration)}\r\n                </MusicTimeSpan>\r\n            </MusicTimeContainer>\r\n        </MusicControllerContainer>\r\n        <ControllerContainer>\r\n            <ControllerButton onClick={handleCloseController}>\r\n                <X\r\n                    color=\"#d9dadc\"\r\n                    size={26}\r\n                />\r\n            </ControllerButton>\r\n            {getVolumeIcon()}\r\n            <Slider\r\n                axis=\"x\"\r\n                x={volume}\r\n                xstep={0.01}\r\n                xmin={0}\r\n                xmax={1}\r\n                onChange={handleVolumeSlider}\r\n                styles={{\r\n                    track: {\r\n                        width: '40%',\r\n                        backgroundColor: '#d9dadc',\r\n                        cursor: 'pointer'\r\n                    },\r\n                    active: {\r\n                        backgroundColor: '#4c43df'\r\n                    },\r\n                    thumb: {\r\n                        width: 15,\r\n                        height: 15,\r\n                        backgroundColor: '#4c43df'\r\n                    }\r\n                }}\r\n            />\r\n        </ControllerContainer>\r\n    </Container>\r\n}\r\n\r\nexport default AudioController","import styled from 'styled-components'\r\n\r\nexport const ContextMenuContainer: any = styled.div`\r\n    border-radius: 10px;\r\n    padding: 5px 10px;\r\n    background: #4f4f4f;\r\n\r\n    box-shadow: 0 0 2px black;\r\n\r\n    position: absolute;\r\n    left: ${(props: any) => props.x}px;\r\n    top: ${(props: any) => props.y}px;\r\n\r\n    z-index: 9999;\r\n`\r\n\r\nexport const ContextMenuItem: any = styled.button`\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    \r\n    margin: 4px 0;\r\n    border-radius: 10px;\r\n    padding: 1px 2.5px;\r\n\r\n    transition: background-color .2s linear;\r\n\r\n    &:hover {\r\n        background-color: rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    &:active {\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n    }\r\n`\r\n\r\nexport const ContextMenuTextContainer = styled.div`\r\n    display: flex;\r\n    flex: 1;\r\n    align-items: center;\r\n`\r\n\r\nexport const ContextMenuDivider = styled.div`\r\n    width: 1.5px;\r\n    height: 15px;\r\n    background-color: #d9dadc;\r\n\r\n    margin: 0 5px;\r\n`\r\n\r\nexport const ContextMenuText = styled.p`\r\n    color: #d9dadc;\r\n`","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #36393f;\r\n`\r\n\r\nexport const Header = styled.header`\r\n    width: 100%;\r\n    height: 8%;\r\n`\r\n\r\nexport const Main = styled.main`\r\n    width: 100%;\r\n    height: 80%;\r\n`\r\n\r\nexport const Footer = styled.footer`\r\n    width: 100%;\r\n    height: 12%;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const InputContainer = styled.div`\r\n    width: 97%;\r\n    height: 45px;\r\n    border-radius: 10px;\r\n    background-color: #4f545c;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    box-sizing: border-box;\r\n    padding: 5px 15px;\r\n`\r\n\r\nexport const InputMessage = styled.input`\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    color: #d9dadc;\r\n    font-size: 16px;\r\n\r\n    ::-webkit-input-placeholder {\r\n        color: #898c97;\r\n    }\r\n    :-moz-placeholder {\r\n        color: #898c97;\r\n    }\r\n    ::-moz-placeholder {\r\n        color: #898c97;\r\n    }\r\n    :-ms-input-placeholder {  \r\n        color: #898c97;\r\n    }\r\n`","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    Container,\r\n    Header,\r\n    Main,\r\n    Footer,\r\n    InputContainer,\r\n    InputMessage\r\n} from './styles'\r\n\r\nimport api from '../../services/api'\r\nimport url from '../../services/url'\r\n\r\nimport logo from '../../images/logo.png'\r\n\r\ninterface UserMessage {\r\n    name: string\r\n    avatar: string\r\n    id: number\r\n    online: boolean\r\n    type: string\r\n}\r\n\r\ninterface Message {\r\n    date: string\r\n    from: number\r\n    content: string\r\n    seen: boolean\r\n    id: number\r\n}\r\n\r\ninterface Friendship {\r\n    id: number\r\n    from: UserMessage\r\n    to: UserMessage\r\n    accepted: boolean\r\n    messages: Array<Message>\r\n}\r\n\r\ninterface ChatProps {\r\n    friendship: Friendship\r\n    me: UserMessage\r\n}\r\n\r\nconst initialStateFriend: UserMessage = {\r\n    avatar: '',\r\n    id: 0,\r\n    name: '',\r\n    online: false,\r\n    type: ''\r\n}\r\n\r\nfunction Chat(props: ChatProps): JSX.Element {\r\n\r\n    const [friend, setFriend] = useState<UserMessage>(initialStateFriend)\r\n\r\n    useEffect(() => {\r\n        if (props.friendship.from.id === props.me.id) {\r\n            setFriend(props.friendship.to)\r\n        } else {\r\n            setFriend(props.friendship.from)\r\n        }\r\n    }, [props.friendship])\r\n\r\n    return <Container>\r\n        <Header>\r\n\r\n        </Header>\r\n        <Main>\r\n\r\n        </Main>\r\n        <Footer>\r\n            <InputContainer>\r\n                <InputMessage\r\n                    placeholder={`Conversar com ${friend.name}`}\r\n                />\r\n            </InputContainer>\r\n        </Footer>\r\n    </Container>\r\n}\r\n\r\nexport default Chat","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #36393f;\r\n\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const ReturnContainer = styled.div`\r\n    width: 100%;\r\n    height: 20px;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n`\r\n\r\nexport const ReturnButton = styled.button`\r\n    width: 30px;\r\n    height: 30px;\r\n`\r\n\r\nexport const PlayerContainer = styled.div`\r\n    display: flex;\r\n    flex: 1;\r\n\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\n\r\nexport const InfoContainer = styled.div`\r\n    width: 50%;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n`\r\n\r\nexport const InfoImg = styled.img`\r\n    width: 100px;\r\n    height: 100px;\r\n\r\n    margin: 0 10px;\r\n`\r\n\r\nexport const InfoMusicContainer = styled.div`\r\n    width: 50%;\r\n    height: 75px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const InfoName = styled.span`\r\n    color: #d9dadc;\r\n    font-weight: bold;\r\n`\r\n\r\nexport const InfoNameInput = styled.div`\r\n    border-radius: 10px;\r\n    padding: 1px 2.5px;\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    & > input {\r\n        width: 80%;\r\n        font-weight: bold;\r\n        font-size: 16px;\r\n        color: #d9dadc;\r\n    }\r\n\r\n    &:hover {\r\n        border: 1px solid #d9dadc;\r\n    }\r\n\r\n    & > button {\r\n        margin: 0 5px;\r\n    }\r\n`\r\n\r\nexport const ErrorContainer = styled.div`\r\n    border: 1.5px solid #c82333;\r\n    border-radius: 10px;\r\n\r\n    width: 200px;\r\n    padding: 5px;\r\n`\r\n\r\nexport const ErrorMessage = styled.p`\r\n    color: #c82333;\r\n`\r\n\r\nexport const InfoMusics = styled.span`\r\n    color: #d9dadc;\r\n`\r\n\r\nexport const PlayButton = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    align-self: flex-end;\r\n\r\n    background-color: #4c43df;\r\n    border-radius: 50%;\r\n\r\n    width: 50px;\r\n    height: 50px;\r\n    margin: 20px;\r\n\r\n    & > svg {\r\n        fill: #d9dadc;\r\n    }\r\n    &:hover {\r\n        background-color: #2c23bf;\r\n    }\r\n    &:active {\r\n        background-color: #09039e;\r\n    }\r\n`\r\n\r\nexport const MusicsContainer = styled.div`\r\n    width: 100%;\r\n    height: 400px;\r\n    overflow: auto;\r\n\r\n    @media (max-height: 664px) {\r\n        height: 320px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        width: 5px;\r\n        height: 5px;\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #3e3e3e;\r\n        border-radius: 10px;\r\n    }\r\n`\r\n\r\n\r\nexport const MusicItem: any = styled.button`\r\n    width: 100%;\r\n    height: 40px;\r\n    color: #d9dadc;\r\n    \r\n    border-radius: 10px;\r\n    margin: 10px 0;\r\n    font-size: 12px;\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    transition: background-color .2s linear;\r\n\r\n    &:hover {\r\n        background-color: rgba(0, 0, 0, 0.2);\r\n    }\r\n    &:active {\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n    }\r\n`\r\n\r\nexport const MusicConfig: any = styled.div`\r\n    display: flex;\r\n    flex: 1;\r\n`\r\n\r\nexport const MusicImage = styled.img`\r\n    width: 80px;\r\n    height: 100%;\r\n    margin: 0 5px;\r\n`\r\n\r\nexport const MusicDrag = styled.div`\r\n    width: 100px;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n\r\n    & > button > svg {\r\n        margin-right: 10px;\r\n        transition: stroke .2s linear;\r\n    }\r\n\r\n    &:hover > button > svg {\r\n        stroke: #b9babc;\r\n    }\r\n\r\n    &:active > button > svg {\r\n        stroke: #a9aaac;\r\n    }\r\n`","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n    Play,\r\n    Plus,\r\n    Eye,\r\n    Share,\r\n    ArrowUp\r\n} from 'react-feather'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {\r\n    ContextMenuContainer,\r\n    ContextMenuItem,\r\n    ContextMenuTextContainer,\r\n    ContextMenuDivider,\r\n    ContextMenuText\r\n} from '../ContextMenu'\r\n\r\nimport api from '../../services/api'\r\n\r\ninterface ContextMenuMusicInterface {\r\n    visible: boolean\r\n    x: number\r\n    y: number\r\n    music: Music\r\n}\r\n\r\nfunction ContextMenuMusic(props: ContextMenuMusicInterface): JSX.Element | null {\r\n\r\n    const email = localStorage.getItem('email')\r\n    const token = localStorage.getItem('token')\r\n\r\n    const dispatch = useDispatch()\r\n    const musicIsLoaded = useSelector((store: any) => store.musicIsLoaded)\r\n    const playlists: Array<Playlist> = useSelector((store: any) => store.playlists)\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    const [isPlaylist, setIsPlaylist] = useState<boolean>(false)\r\n\r\n    function handlePlayMusic() {\r\n        dispatch({ type: 'disactive-music-is-loaded' })\r\n        setTimeout(() => {\r\n            dispatch({ type: 'change-music', payload: props.music })\r\n            dispatch({ type: 'active-music-is-loaded' })\r\n        }, 1)\r\n    }\r\n\r\n    function handleSeeMusic() {\r\n        history.push(`/app/music/${props.music.id}`)\r\n    }\r\n\r\n    function handleAddRow() {\r\n        const musicsJSON = sessionStorage.getItem('musics')\r\n\r\n        let musics: Array<string> = []\r\n        if (musicsJSON) {\r\n            musics = JSON.parse(musicsJSON)\r\n        }\r\n        if (musicIsLoaded) {\r\n            musics.push(`${props.music.id}`)\r\n            sessionStorage.setItem('musics', JSON.stringify(musics))\r\n        } else {\r\n            handlePlayMusic()\r\n        }\r\n    }\r\n\r\n    function saveMusic(index: number): Function {\r\n        return async function() {\r\n            try {\r\n                const { data } = await api.patch('/playlists/insert', {\r\n                    name: playlists[index].name,\r\n                    name_upload: props.music.name_upload\r\n                }, {\r\n                    headers: {\r\n                        email,\r\n                        token\r\n                    }\r\n                })\r\n                if (data.error) {\r\n                    alert(data.message)\r\n                } else {\r\n                    dispatch({ type: 'insert-playlists', index, payload: props.music })\r\n                }\r\n            } catch(err) {\r\n                alert('Não foi possível salvar a música em sua playlist')\r\n            }\r\n        }\r\n    }\r\n\r\n    return props.visible ? <Fragment>\r\n        <ContextMenuContainer\r\n            x={props.x}\r\n            y={props.y}\r\n        >\r\n            <ContextMenuItem\r\n                onClick={handlePlayMusic}\r\n            >\r\n                <ContextMenuTextContainer>\r\n                    <Play\r\n                        size={18}\r\n                        color=\"#d9dadc\"\r\n                        style={{ fill: '#d9dadc' }}\r\n                    />\r\n                    <ContextMenuDivider/>\r\n                    <ContextMenuText>Tocar</ContextMenuText>\r\n                </ContextMenuTextContainer>\r\n            </ContextMenuItem>\r\n            <ContextMenuItem onClick={handleSeeMusic}>\r\n                <ContextMenuTextContainer>\r\n                    <Eye\r\n                        size={18}\r\n                        color=\"#d9dadc\"\r\n                    />\r\n                    <ContextMenuDivider/>\r\n                    <ContextMenuText>Ver sobre</ContextMenuText>\r\n                </ContextMenuTextContainer>\r\n            </ContextMenuItem>\r\n            <ContextMenuItem\r\n                onMouseEnter={() => setIsPlaylist(true)}\r\n                onMouseLeave={() => setTimeout(() => {\r\n                    setIsPlaylist(false)\r\n                }, 200)}\r\n            >\r\n                <ContextMenuTextContainer>\r\n                    <Plus\r\n                        size={18}\r\n                        color=\"#d9dadc\"\r\n                    />\r\n                    <ContextMenuDivider/>\r\n                    <ContextMenuText>Adicionar á playlist</ContextMenuText>\r\n                </ContextMenuTextContainer>\r\n                <Play\r\n                    size={16}\r\n                    color=\"#d9dadc\"\r\n                    style={{ fill: '#d9dadc' }}\r\n                />\r\n            </ContextMenuItem>\r\n            <ContextMenuItem>\r\n                <ContextMenuTextContainer>\r\n                    <Share\r\n                        size={18}\r\n                        color=\"#d9dadc\"\r\n                    />\r\n                    <ContextMenuDivider/>\r\n                    <ContextMenuText>Compartilhar (Não funciona)</ContextMenuText>\r\n                </ContextMenuTextContainer>\r\n            </ContextMenuItem>\r\n            <ContextMenuItem onClick={handleAddRow}>\r\n                <ContextMenuTextContainer>\r\n                    <ArrowUp\r\n                        size={18}\r\n                        color=\"#d9dadc\"\r\n                    />\r\n                    <ContextMenuDivider/>\r\n                    <ContextMenuText>Adicionar á fila</ContextMenuText>\r\n                </ContextMenuTextContainer>\r\n            </ContextMenuItem>\r\n        </ContextMenuContainer>\r\n        {isPlaylist ? <ContextMenuContainer\r\n            onMouseEnter={() => setTimeout(() => {\r\n                setIsPlaylist(true)\r\n            }, 200)}\r\n            x={props.x + 223}\r\n            y={props.y + 40}\r\n        >\r\n            {playlists.map((playlist, index) => <ContextMenuItem\r\n                key={index}\r\n                onClick={saveMusic(index) as any}\r\n            >\r\n                <ContextMenuTextContainer>\r\n                    <ContextMenuText>{playlist.name}</ContextMenuText>\r\n                </ContextMenuTextContainer>\r\n            </ContextMenuItem>)}\r\n        </ContextMenuContainer> : null}\r\n    </Fragment> : null\r\n}\r\n\r\nexport default ContextMenuMusic","export default __webpack_public_path__ + \"static/media/logo.674c2717.png\";","import React, { useState, useEffect, useRef, ChangeEvent } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport {\r\n    Eye,\r\n    Share,\r\n    ArrowLeft,\r\n    Edit,\r\n    Play,\r\n    ArrowUp,\r\n    ArrowDown,\r\n    Trash2,\r\n    Plus\r\n} from 'react-feather'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport {\r\n    Container,\r\n    ReturnContainer,\r\n    ReturnButton,\r\n    PlayerContainer,\r\n    InfoContainer,\r\n    InfoImg,\r\n    InfoMusicContainer,\r\n    InfoName,\r\n    InfoNameInput,\r\n    ErrorContainer,\r\n    ErrorMessage,\r\n    InfoMusics,\r\n    PlayButton,\r\n    MusicsContainer,\r\n    MusicItem,\r\n    MusicConfig,\r\n    MusicImage,\r\n    MusicDrag\r\n} from './styles'\r\n\r\nimport ContextMenuMusic from '../../components/ContextMenuMusic'\r\n\r\nimport api from '../../services/api'\r\nimport url from '../../services/url'\r\n\r\nimport logo from '../../images/logo.png'\r\n\r\nconst initialState: Music = {\r\n    access: 0,\r\n    description: '',\r\n    keywords: [],\r\n    music_background: '',\r\n    name: '',\r\n    name_upload: '',\r\n    type: '',\r\n    user_owner: {\r\n        avatar: '',\r\n        name: '',\r\n        id: 0\r\n    },\r\n    id: 0,\r\n    createdAt: '',\r\n    editable: false\r\n}\r\n\r\nconst initialStatePlaylist: Playlist = {\r\n    id: 0,\r\n    musics: [],\r\n    name: '',\r\n    public: false,\r\n    editable: false\r\n}\r\n\r\nfunction Playlist(): JSX.Element {\r\n\r\n    const history = useHistory()\r\n    const params = useParams() as any\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [contextMenu, setContextMenu] = useState<boolean>(false)\r\n    const [contextMenuCoordinates, setContextMenuCoordinates] = useState<CustomCoordinates>({\r\n        x: -500,\r\n        y: -500\r\n    })\r\n    const [contextMenuMusic, setContextMenuMusic] = useState<Music>(initialState)\r\n\r\n    const [error, setError] = useState<boolean>(false)\r\n    const [errorMessage, setErrorMessage] = useState<string>('')\r\n\r\n    const [hasImg, setHasImg] = useState<boolean>(false)\r\n    const [musics, setMusics] = useState<Array<Music>>([])\r\n\r\n    function treatTypeName(): string {\r\n        const treated: string = params.type[0].toUpperCase()\r\n        return treated + params.type.slice(1, params.type.length)\r\n    }\r\n\r\n    function handleSeeMusic(id: number): Function {\r\n        return function() {\r\n            history.push(`/app/music/${id}`)\r\n        }\r\n    }\r\n\r\n    function handleContextMenu(music: Music): Function {\r\n        return function(evt: MouseEvent) {\r\n            if (evt.button === 2) {\r\n                setContextMenu(true)\r\n                setContextMenuMusic(music)\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleGoBack(): void {\r\n        history.goBack()\r\n    }\r\n\r\n    function handlePlayPlaylist(): Function {\r\n        return function() {\r\n            dispatch({ type: 'disactive-music-is-loaded' })\r\n            setTimeout(() => {\r\n                dispatch({ type: 'rename-playlist', payload: treatTypeName() })\r\n                dispatch({ type: 'change-playlist', payload: musics })\r\n                dispatch({ type: 'active-playlist' })\r\n                dispatch({ type: 'active-music-is-loaded' })\r\n            }, 1)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function run() {\r\n            try {\r\n                const { data } = await api.get(`/audio/type/${params.type}`)\r\n                if (data.error) {\r\n                    setError(true)\r\n                    setErrorMessage(data.message)\r\n                } else {\r\n                    setMusics(data)\r\n                }\r\n            } catch(err) {\r\n                setError(true)\r\n                setErrorMessage('Ocorreu um erro')\r\n            }\r\n        }\r\n        async function getImg() {\r\n            try {\r\n                const { data } = await api.get(`${url}/types-img/${params.type}.jpeg`)\r\n                if (!data || data.error) {\r\n                    setHasImg(false)\r\n                } else {\r\n                    setHasImg(true)\r\n                }\r\n            } catch(err) {\r\n                setHasImg(false)\r\n            }\r\n        }\r\n\r\n        function click() {\r\n            setContextMenu(false)\r\n            setContextMenuCoordinates({\r\n                x: -500,\r\n                y: -500\r\n            })\r\n        }\r\n        function contextMenu(evt: MouseEvent) {\r\n            const config: CustomCoordinates = {\r\n                x: evt.x,\r\n                y: 0\r\n            }\r\n            if (evt.y > (window.innerHeight / 100) * 85) {\r\n                config.y = evt.y - 100\r\n            } else {\r\n                config.y = evt.y - 30\r\n            }\r\n            setContextMenuCoordinates(config)\r\n        }\r\n        document.addEventListener('click', click)\r\n        document.addEventListener('contextmenu', contextMenu)\r\n        \r\n        run()\r\n        getImg()\r\n        return () => {\r\n            document.removeEventListener('click', click)\r\n            document.removeEventListener('contextmenu', contextMenu)\r\n        }\r\n    }, [params])\r\n\r\n    return <Container>\r\n        <ContextMenuMusic\r\n            visible={contextMenu}\r\n            x={contextMenuCoordinates.x}\r\n            y={contextMenuCoordinates.y}\r\n            music={contextMenuMusic}\r\n        />\r\n        <ReturnContainer>\r\n            <ReturnButton onClick={handleGoBack}>\r\n                <ArrowLeft\r\n                    color=\"#d9dadc\"\r\n                    size={20}\r\n                />\r\n            </ReturnButton>\r\n        </ReturnContainer>\r\n        <PlayerContainer>\r\n            <InfoContainer>\r\n                <InfoImg\r\n                    src={hasImg ? `${url}/types-img/${params.type}.jpeg` : logo}\r\n                />\r\n                <InfoMusicContainer>\r\n                    <InfoName>{treatTypeName()}</InfoName>\r\n                    <InfoMusics>{musics.length} Música{musics.length < 2 ? '' : 's'}</InfoMusics>\r\n                </InfoMusicContainer>\r\n                {error ? <ErrorContainer>\r\n                    <ErrorMessage>{errorMessage}</ErrorMessage>\r\n                </ErrorContainer> : null}\r\n            </InfoContainer>\r\n            {musics.length > 0 ? <PlayButton onClick={handlePlayPlaylist() as any}>\r\n                <Play\r\n                    color=\"#d9dadc\"\r\n                    size={26}\r\n                />\r\n            </PlayButton> : null}\r\n        </PlayerContainer>\r\n        <MusicsContainer>\r\n            {musics.map((music, index) => <MusicItem\r\n                key={index}\r\n                onMouseDown={handleContextMenu(music) as any}\r\n            >\r\n                <MusicConfig onClick={handleSeeMusic(music.id) as any}>\r\n                    <MusicImage\r\n                        src={`${url}/music-bg/${music.music_background}`}\r\n                    />\r\n                    <div style={{ textAlign: 'left' }}>\r\n                        <strong>{music.name}</strong>\r\n                        <p>Enviado por: {music.user_owner.name}</p>\r\n                        <p>Acessos: {music.access}</p>\r\n                    </div>\r\n                </MusicConfig>\r\n            </MusicItem>)}\r\n        </MusicsContainer>\r\n    </Container>\r\n}\r\n\r\nexport default Playlist","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #36393f;\r\n\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n`\r\n\r\nexport const Title = styled.h2`\r\n    font-size: 18px;\r\n    color: #d9dadc;\r\n    margin-bottom: 5px;\r\n`\r\n\r\nexport const MusicsContainer = styled.div`\r\n    width: 100%;\r\n    height: 165px;\r\n\r\n    display: flex;\r\n\r\n    overflow-x: auto;\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        width: 1px;\r\n        height: 5px;\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #3e3e3e;\r\n        border-radius: 10px;\r\n    }\r\n`\r\n\r\nexport const MusicItem: any = styled.button`\r\n    position: relative;\r\n    width: 194.56px;\r\n    height: 90%;\r\n\r\n    margin: 0 10px;\r\n    padding: 0 10px;\r\n    border-radius: 10px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    transition: background-color .2s linear;\r\n\r\n    & > button {\r\n        display: none;\r\n        opacity: 0;\r\n        transition: opacity .2s linear;\r\n    }\r\n\r\n    &:hover {\r\n        background-color: rgba(255, 255, 255, 0.2);\r\n    }\r\n\r\n    &:hover > button {\r\n        display: block;\r\n        opacity: 1;\r\n    }\r\n`\r\n\r\nexport const MusicItemImage: any = styled.img`\r\n    width: 184.56px;\r\n    height: 78%;\r\n\r\n    border-radius: 10px;\r\n\r\n    background-clip: clip;\r\n\r\n    align-self: center;\r\n`\r\n\r\nexport const MusicItemButton = styled.button`\r\n    position: absolute;\r\n    left: 75%;\r\n    bottom: 25%;\r\n\r\n    width: 30px;\r\n    height: 30px;\r\n    \r\n    border-radius: 50%;\r\n\r\n    background-color: #4c43df;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    transition: background-color .2s linear; \r\n\r\n    & > svg {\r\n        fill: #d9dadc;\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #2c23bf;\r\n    }\r\n\r\n    &:active {\r\n        background-color: #09039e;\r\n    }\r\n`\r\n\r\nexport const MusicItemName: any = styled.p`\r\n    color: #d9dadc;\r\n`","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n    Play\r\n} from 'react-feather'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n    Container,\r\n    Title,\r\n    MusicsContainer,\r\n    MusicItem,\r\n    MusicItemImage,\r\n    MusicItemButton,\r\n    MusicItemName\r\n} from './styles'\r\n\r\nimport ContextMenuMusic from '../../components/ContextMenuMusic'\r\n\r\nimport api from '../../services/api'\r\nimport url from '../../services/url'\r\n\r\nconst initialState: Music = {\r\n    access: 0,\r\n    description: '',\r\n    keywords: [],\r\n    music_background: '',\r\n    name: '',\r\n    name_upload: '',\r\n    type: '',\r\n    user_owner: {\r\n        avatar: '',\r\n        name: '',\r\n        id: 0\r\n    },\r\n    id: 0,\r\n    createdAt: '',\r\n    editable: false\r\n}\r\n\r\nfunction Home(): JSX.Element {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const history = useHistory()\r\n\r\n    const [musics, setMusics] = useState<Array<Music>>([])\r\n\r\n    const [contextMenuVisible, setContextMenuVisible] = useState<boolean>(false)\r\n    const [contextMenuCoordinates, setContextMenuCoordinates] = useState<CustomCoordinates>({\r\n        x: 0,\r\n        y: 0\r\n    })\r\n    const [actualMusic, setActualMusic] = useState<Music>(initialState)\r\n\r\n    function handleSeeMusic(id: number): Function {\r\n        return function() {\r\n            history.push(`/app/music/${id}`)\r\n        }\r\n    }\r\n\r\n    function handleMouseDown(music: Music): Function {\r\n        return function(evt: MouseEvent) {\r\n            if (evt.button === 2) {\r\n                setContextMenuVisible(true)\r\n                setActualMusic(music)\r\n            }\r\n        }\r\n    }\r\n\r\n    function playMusic(music: Music): Function {\r\n        return function() {\r\n            dispatch({ type: 'disactive-music-is-loaded' })\r\n            setTimeout(() => {\r\n                dispatch({ type: 'change-music', payload: music })\r\n                dispatch({ type: 'active-music-is-loaded' })\r\n            }, 1)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function run() {\r\n            try {\r\n                function sortMusic(music1: Music, music2: Music): number {\r\n                    if (music1.access > music2.access) {\r\n                        return -1\r\n                    }\r\n                    if (music1.access < music2.access) {\r\n                        return 1\r\n                    }\r\n                    if (music1.access === music2.access) {\r\n                        return 0\r\n                    }\r\n                    return 0\r\n                }\r\n\r\n                const { data } = await api.get('/music/recents')\r\n                if (!data.error) {\r\n                    const divider = data.length / 5\r\n\r\n                    let musics1: Array<Music> = data.slice(0, divider)\r\n                    let musics2: Array<Music> = data.slice(divider, divider * 2)\r\n                    let musics3: Array<Music> = data.slice(divider * 2, divider * 3)\r\n                    let musics4: Array<Music> = data.slice(divider * 3, divider * 4)\r\n                    let musics5: Array<Music> = data.slice(divider * 4, data.length)\r\n\r\n                    musics1 = musics1.sort(sortMusic)\r\n                    musics2 = musics2.sort(sortMusic)\r\n                    musics3 = musics3.sort(sortMusic)\r\n                    musics4 = musics4.sort(sortMusic)\r\n                    musics5 = musics5.sort(sortMusic)\r\n\r\n                    setMusics([...musics1, ...musics2, ...musics3, ...musics4, ...musics5])\r\n                }\r\n            } catch(err) {\r\n                alert('Um erro ocorreu ao carregar as músicas recentes.')\r\n            }\r\n        }\r\n        run()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        function click() {\r\n            setContextMenuVisible(false)\r\n            setContextMenuCoordinates({\r\n                x: -500,\r\n                y: -500\r\n            })\r\n        }\r\n        function contextMenu(evt: MouseEvent) {\r\n            const config: CustomCoordinates = {\r\n                x: evt.x,\r\n                y: 0\r\n            }\r\n            if (evt.y > (window.innerHeight / 100) * 85) {\r\n                config.y = evt.y - 100\r\n            } else {\r\n                config.y = evt.y - 30\r\n            }\r\n            setContextMenuCoordinates(config)\r\n        }\r\n        document.addEventListener('click', click)\r\n        document.addEventListener('contextmenu', contextMenu)\r\n        return () => {\r\n            document.removeEventListener('click', click)\r\n            document.removeEventListener('contextmenu', contextMenu)\r\n        }\r\n    }, [])\r\n\r\n    return <Container>\r\n        <ContextMenuMusic\r\n            visible={contextMenuVisible}\r\n            x={contextMenuCoordinates.x}\r\n            y={contextMenuCoordinates.y}\r\n            music={actualMusic}\r\n        />\r\n        <Title>Músicas recentes</Title>\r\n        <MusicsContainer>\r\n            {musics.map(music => <MusicItem\r\n                onMouseDown={handleMouseDown(music) as any}\r\n                key={music.name_upload}\r\n                onDoubleClick={playMusic(music) as any}>\r\n                <MusicItemImage\r\n                    onClick={handleSeeMusic(music.id) as any}\r\n                    src={`${url}/music-bg/${music.music_background}`}\r\n                />\r\n                <MusicItemButton onClick={playMusic(music) as any}>\r\n                    <Play\r\n                        color=\"#d9dadc\"\r\n                        size={20}\r\n                    />\r\n                </MusicItemButton>\r\n                    <MusicItemName onClick={handleSeeMusic(music.id) as any}>{music.name}</MusicItemName>\r\n                    <MusicItemName onClick={handleSeeMusic(music.id) as any}>\r\n                        <strong>Acessos:{' '}</strong>\r\n                        {music.access}\r\n                    </MusicItemName>\r\n            </MusicItem>)}\r\n        </MusicsContainer>\r\n    </Container>\r\n}\r\n\r\nexport default Home","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #36393f;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const InputContainer: any = styled.label`\r\n    width: ${(props: any) => props.cwidth};\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    cursor: pointer;\r\n`\r\n\r\nexport const Input: any = styled.input`\r\n    color: #d9dadc;\r\n    padding: 5 10px;\r\n    height: 20px;\r\n    border-radius: 5px;\r\n\r\n    ${(props: any) => props.cwidth ? `width: ${props.cwidth};` : ''}\r\n\r\n    margin: 0 5px;\r\n\r\n    font-size: 16px;\r\n\r\n    &:hover {\r\n        border: 1px solid #d9dadc;\r\n    }\r\n    &:focus {\r\n        border: 1px solid #d9dadc;\r\n    }\r\n`\r\n\r\nexport const Header = styled.header`\r\n    width: 100%;\r\n    height: 5%;\r\n\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n`\r\n\r\nexport const Main = styled.main`\r\n    width: 100%;\r\n    height: 35%;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n`\r\n\r\nexport const MainImg = styled.img`\r\n    width: 260px;\r\n    height: 130px;\r\n    border-radius: 10px;\r\n`\r\n\r\nexport const MainInfoContainer = styled.div`\r\n    width: 50%;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nexport const MainInfo = styled.div`\r\n    width: 170px;\r\n    height: 130px;\r\n\r\n    margin: 10px;\r\n\r\n    color: #d9dadc;\r\n    font-size: 18px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n`\r\n\r\nexport const MainInfoAvatarContainer = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nexport const MainInfoAvatar = styled.img`\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 20px;\r\n\r\n    margin-right: 5px;\r\n`\r\n\r\nexport const MainInfoName = styled.p`\r\n    font-size: 16px;\r\n    font-family: 'Nunito', Arial, Helvetica, sans-serif;\r\n    text-align: left;\r\n    color: #d9dadc;\r\n`\r\n\r\nexport const MainPlayContainer = styled.div`\r\n    width: 50%;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: flex-end;\r\n`\r\n\r\nexport const MainPlayType = styled.p`\r\n    background-color: #4c43df;\r\n    color: #d9dadc;\r\n\r\n    font-weight: bold;\r\n    padding: 5px 10px;\r\n    border-radius: 5px;\r\n\r\n    transform: translateY(-15px);\r\n`\r\n\r\nexport const MainPlayButton = styled.button`\r\n    width: 45px;\r\n    height: 45px;\r\n    border-radius: 50%;\r\n\r\n    background-color: #4c43df;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    margin: 10px;\r\n\r\n    transition: background-color .2s linear;\r\n\r\n    & > svg {\r\n        fill: #d9dadc;\r\n    }\r\n    \r\n    &:hover {\r\n        background-color: #2c23bf;\r\n    }\r\n    &:active {\r\n        background-color: #09039e;\r\n    }\r\n`\r\n\r\nexport const Footer = styled.footer`\r\n    width: 100%;\r\n    height: 60%;\r\n\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    \r\n    color: #d9dadc;\r\n`\r\n\r\nexport const FooterItem = styled.div`\r\n    margin: 10px 0;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n`","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport {\r\n    ArrowLeft,\r\n    Play,\r\n    Edit\r\n} from 'react-feather'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n    Container,\r\n    InputContainer,\r\n    Input,\r\n    Header,\r\n    Main,\r\n    MainImg,\r\n    MainInfoContainer,\r\n    MainInfo,\r\n    MainInfoAvatarContainer,\r\n    MainInfoAvatar,\r\n    MainInfoName,\r\n    MainPlayContainer,\r\n    MainPlayType,\r\n    MainPlayButton,\r\n    Footer,\r\n    FooterItem\r\n} from './styles'\r\n\r\nimport api from '../../services/api'\r\nimport url from '../../services/url'\r\n\r\nimport logo from '../../images/logo.png'\r\n\r\ninterface Error {\r\n    error: boolean\r\n    message: string\r\n}\r\n\r\nconst initialState: Music = {\r\n    access: 0,\r\n    description: '',\r\n    id: 0,\r\n    keywords: [],\r\n    music_background: '',\r\n    name: '',\r\n    name_upload: '',\r\n    type: '',\r\n    user_owner: {\r\n        avatar: '',\r\n        name: '',\r\n        id: 0\r\n    },\r\n    createdAt: '',\r\n    editable: false\r\n}\r\n\r\nfunction Music(): JSX.Element {\r\n\r\n    const email = localStorage.getItem('email')\r\n    const token = localStorage.getItem('token')\r\n\r\n    const { id } = useParams() as any\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const nameInput = useRef<any>()\r\n    const descriptionInput = useRef<any>()\r\n    const keywordsInput = useRef<any>()\r\n\r\n    const [loaded, setLoaded] = useState<boolean>(false)\r\n\r\n    const [music, setMusic] = useState<Music>(initialState)\r\n    const [error, setError] = useState<Error>()\r\n\r\n    const [initialName, setInitialName] = useState<string>('')\r\n    const [name, setName] = useState<string>('')\r\n    const [initialDescription, setInitialDescription] = useState<string>('')\r\n    const [description, setDescription] = useState<string>('')\r\n    const [initialKeywords, setInitialKeywords] = useState<string>('')\r\n    const [keywords, setKeywords] = useState<string>('')\r\n\r\n    function treatType() {\r\n        const { type } = music\r\n        const letter = type[0]\r\n        return letter.toUpperCase() + type.slice(1, type.length)\r\n    }\r\n\r\n    function treatTime(time: number): string {\r\n        if (time > 9) {\r\n            return `${time}`\r\n        } else {\r\n            return `0${time}`\r\n        }\r\n    }\r\n\r\n    function getDate(): string {\r\n        const createdAt = new Date(music.createdAt)\r\n\r\n        const day = treatTime(createdAt.getDate())\r\n        const month = treatTime(createdAt.getMonth())\r\n        const year = createdAt.getFullYear()\r\n\r\n        const hours = treatTime(createdAt.getHours())\r\n        const minutes = treatTime(createdAt.getMinutes())\r\n        return `${hours}:${minutes} - ${day}/${month}/${year}`\r\n    }\r\n\r\n    function goBack() {\r\n        history.goBack()\r\n    }\r\n\r\n    async function handleSaveName() {\r\n        if (name !== initialName) {\r\n            try {\r\n                const config: any = {}\r\n                config.name_upload = music.name_upload\r\n                config.name = name\r\n    \r\n                const { data } = await api.patch('/audio', config, {\r\n                    headers: {\r\n                        email,\r\n                        token\r\n                    }\r\n                })\r\n                if (data.error) {\r\n                    alert(data.message)\r\n                } else {\r\n                    document.title = `${name} - Aram Music`\r\n                    setInitialName(name)\r\n                }\r\n            } catch(err) {\r\n                alert('Ocorreu um erro')\r\n            }\r\n        }\r\n    }\r\n\r\n    async function handleSaveDescription() {\r\n        if (description !== initialDescription) {\r\n            try {\r\n                const config: any = {}\r\n                config.name_upload = music.name_upload\r\n                config.description = description\r\n    \r\n                const { data } = await api.patch('/audio', config, {\r\n                    headers: {\r\n                        email,\r\n                        token\r\n                    }\r\n                })\r\n                if (data.error) {\r\n                    alert(data.message)\r\n                } else {\r\n                    setInitialDescription(description)\r\n                }\r\n            } catch(err) {\r\n                alert('Ocorreu um erro')\r\n            }\r\n        }\r\n    }\r\n\r\n    async function handleSaveKeywords() {\r\n        if (keywords !== initialKeywords) {\r\n            try {\r\n                const config: any = {}\r\n                config.name_upload = music.name_upload\r\n                config.keywords = keywords\r\n    \r\n                const { data } = await api.patch('/audio', config, {\r\n                    headers: {\r\n                        email,\r\n                        token\r\n                    }\r\n                })\r\n                if (data.error) {\r\n                    alert(data.message)\r\n                } else {\r\n                    setInitialKeywords(keywords)\r\n                }\r\n            } catch(err) {\r\n                alert('Ocorreu um erro')\r\n            }\r\n        }\r\n    }\r\n\r\n    function handlePlayMusic() {\r\n        dispatch({ type: 'disactive-music-is-loaded' })\r\n        setTimeout(() => {\r\n            dispatch({ type: 'change-music', payload: music })\r\n            dispatch({ type: 'active-music-is-loaded' })\r\n        }, 1)\r\n    }\r\n\r\n    function handleOpenUserPage(id: number) {\r\n        history.push(`/app/user/${id}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function run() {\r\n            try {\r\n                const { data } = await api.get(`/music/${id}`, {\r\n                    headers: {\r\n                        email,\r\n                        token\r\n                    }\r\n                })\r\n                if (data.error) {\r\n                    setError(data)\r\n                } else {\r\n                    document.title = `${data.name} - Aram Music`\r\n                    setMusic(data)\r\n                    setInitialName(data.name)\r\n                    setName(data.name)\r\n                    setInitialDescription(data.description)\r\n                    setDescription(data.description)\r\n                    setInitialKeywords(data.keywords.join(', '))\r\n                    setKeywords(data.keywords.join(', '))\r\n                }\r\n                setLoaded(true)\r\n            } catch(err) {\r\n                alert('Ocorreu um erro ao carregar a música')\r\n            }\r\n        }\r\n        run()\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        function keydown(evt: KeyboardEvent) {\r\n            if (evt.code === 'Enter') {\r\n                if (nameInput.current) {\r\n                    nameInput.current.blur()\r\n                }\r\n                if (descriptionInput.current) {\r\n                    descriptionInput.current.blur()\r\n                }\r\n                if (keywordsInput.current) {\r\n                    keywordsInput.current.blur()\r\n                }\r\n            }\r\n        }\r\n        document.addEventListener('keydown', keydown)\r\n        return () => {\r\n            document.removeEventListener('keydown', keydown)\r\n        }\r\n    }, [])\r\n\r\n    if (!loaded) {\r\n        return <Container/>\r\n    }\r\n\r\n    if (error) {\r\n        if (error.error) {\r\n            return <Container\r\n                style={{ justifyContent: 'center', alignItems: 'center' }}\r\n            >\r\n                <img\r\n                    src={logo}\r\n                    style={{ width: 80, height: 80 }}\r\n                />\r\n                <h2\r\n                    style={{\r\n                        color: '#4c43df'\r\n                    }}\r\n                >{error.message}</h2>\r\n            </Container>\r\n        }\r\n    }\r\n\r\n    return <Container>\r\n        <Header>\r\n            <button onClick={goBack}>\r\n                <ArrowLeft\r\n                    size={20}\r\n                    color=\"#d9dadc\"\r\n                />\r\n            </button>\r\n        </Header>\r\n        <Main>\r\n            <MainInfoContainer>\r\n                <MainImg\r\n                    src={`${url}/music-bg/${music.music_background}`}\r\n                />\r\n                <MainInfo>\r\n                    <div>\r\n                        {music.editable ? <InputContainer cwidth={'225px'}>\r\n                            <Input\r\n                                ref={nameInput}\r\n                                maxLength={30}\r\n                                onBlur={handleSaveName}\r\n                                onChange={(e: any) => setName(e.target.value)}\r\n                                value={name}\r\n                                placeholder=\"Nome\"\r\n                            />\r\n                            <Edit\r\n                                size={16}\r\n                                color=\"#d9dadc\"\r\n                            />\r\n                        </InputContainer> :\r\n                        <p>{music.name}</p>}\r\n                    </div>\r\n                    <MainInfoAvatarContainer\r\n                        onClick={() => handleOpenUserPage(music.user_owner.id)}\r\n                    >\r\n                        <MainInfoAvatar\r\n                            src={music.user_owner.avatar ? `${url}/avatar/${music.user_owner.avatar}` : logo}\r\n                        />\r\n                        <div>\r\n                            <MainInfoName>Enviado por:</MainInfoName>\r\n                            <MainInfoName><strong>{music.user_owner.name}</strong></MainInfoName>\r\n                        </div>\r\n                    </MainInfoAvatarContainer>\r\n                </MainInfo>\r\n            </MainInfoContainer>\r\n            <MainPlayContainer>\r\n                <MainPlayType>{treatType()}</MainPlayType>\r\n                <MainPlayButton onClick={handlePlayMusic}>\r\n                    <Play\r\n                        size={20}\r\n                        color=\"#d9dadc\"\r\n                    />\r\n                </MainPlayButton>\r\n            </MainPlayContainer>\r\n        </Main>\r\n        <Footer>\r\n            <FooterItem>\r\n                <strong>Descrição:</strong>\r\n                {music.editable ? <InputContainer cwidth={'80%'}>\r\n                    <Input\r\n                        ref={descriptionInput}\r\n                        cwidth={'95%'}\r\n                        maxLength={100}\r\n                        onBlur={handleSaveDescription}\r\n                        onChange={(e: any) => setDescription(e.target.value)}\r\n                        value={description}\r\n                        placeholder=\"Descrição\"\r\n                    />\r\n                    <Edit\r\n                        size={16}\r\n                        color=\"#d9dadc\"\r\n                    />\r\n                </InputContainer> : <p>{music.description}</p>}\r\n            </FooterItem>\r\n            <FooterItem>\r\n                <strong>Palavras-chaves:</strong>\r\n                {music.editable ? <InputContainer cwidth={'100%'}>\r\n                    <Input\r\n                        ref={keywordsInput}\r\n                        cwidth={'95%'}\r\n                        maxLength={400}\r\n                        onBlur={handleSaveKeywords}\r\n                        onChange={(e: any) => setKeywords(e.target.value)}\r\n                        value={keywords}\r\n                        placeholder=\"Palavras-chaves\"\r\n                    />\r\n                    <Edit\r\n                        size={16}\r\n                        color=\"#d9dadc\"\r\n                    />\r\n                </InputContainer> : <p>{music.keywords.join(', ')}</p>}\r\n            </FooterItem>\r\n            <FooterItem>\r\n                <p><strong>Acessos: </strong>{music.access}</p>\r\n            </FooterItem>\r\n            <FooterItem>\r\n                <strong>Data de envio:</strong>\r\n                <p>{getDate()}</p>\r\n            </FooterItem>\r\n        </Footer>\r\n    </Container>\r\n}\r\n\r\nexport default Music","import styled from 'styled-components'\r\n\r\nexport const Container: any = styled.div`\r\n    width: 100%;\r\n    height: ${(props: any) => props.shrink ? window.innerHeight - 100 : window.innerHeight}px;\r\n\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n\r\n    background-color: #36393f;\r\n    \r\n    overflow: auto;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        width: 7px;\r\n        height: 5px;\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #3e3e3e;\r\n        border-radius: 10px;\r\n    }\r\n`\r\n\r\nexport const MusicItem = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    width: 100%;\r\n    height: 50px;\r\n\r\n    background-color: rgba(255, 255, 255, 0.15);\r\n    margin: 5px 0;\r\n\r\n    box-sizing: border-box;\r\n    padding: 5px 15px;\r\n\r\n    cursor: pointer;\r\n`\r\n\r\nexport const MusicInfo: any = styled.div`\r\n    height: 50px;\r\n    width: 400px;\r\n\r\n    box-sizing: border-box;\r\n    padding: 5px;\r\n\r\n    display: flex;\r\n`\r\n\r\nexport const MusicImg = styled.img`\r\n    width: 60px;\r\n    height: 30px;\r\n`\r\n\r\nexport const MusicName = styled.p`\r\n    color: #d9dadc;\r\n    margin: 0 5px;\r\n`","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n    Edit,\r\n    Trash2\r\n} from 'react-feather'\r\n\r\nimport {\r\n    Container,\r\n    MusicItem,\r\n    MusicInfo,\r\n    MusicImg,\r\n    MusicName\r\n} from './styles'\r\n\r\nimport ContextMenuMusic from '../../components/ContextMenuMusic'\r\n\r\nimport api from '../../services/api'\r\nimport url from '../../services/url'\r\n\r\nconst initialState: Music = {\r\n    name: '',\r\n    description: '',\r\n    keywords: [],\r\n    access: 0,\r\n    createdAt: '',\r\n    editable: false,\r\n    id: 0,\r\n    music_background: '',\r\n    name_upload: '',\r\n    type: '',\r\n    user_owner: {\r\n        name: '',\r\n        avatar: '',\r\n        id: 0\r\n    }\r\n}\r\n\r\nconst initialStateCoordinates: CustomCoordinates = {\r\n    x: -500,\r\n    y: -500\r\n}\r\n\r\nfunction MyMusics(): JSX.Element {\r\n\r\n    const email = localStorage.getItem('email')\r\n    const token = localStorage.getItem('token')\r\n\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n    const musicIsLoaded = useSelector((store: any) => store.musicIsLoaded)\r\n\r\n    const [actualMusic, setActualMusic] = useState<Music>(initialState)\r\n    const [contextMenuVisible, setContextMenuVisible] = useState<boolean>(false)\r\n    const [contextMenuCoordinates, setContextMenuCoordinates] = useState<CustomCoordinates>(initialStateCoordinates)\r\n\r\n    const [myMusics, setMyMusics] = useState<Array<Music>>([])\r\n\r\n    function handleSeeMusic(id: number): Function {\r\n        return function() {\r\n            history.push(`/app/music/${id}`)\r\n        }\r\n    }\r\n\r\n    function handleContextMenu(music: Music): Function {\r\n        return function() {\r\n            setActualMusic(music)\r\n            setContextMenuVisible(true)\r\n        }\r\n    }\r\n\r\n    function handleDeleteMusic(name_upload: string, index: number): Function {\r\n        return async function() {\r\n            try {\r\n                const { data } = await api.delete('/audio', {\r\n                    headers: {\r\n                        name_upload,\r\n                        email,\r\n                        token\r\n                    }\r\n                })\r\n                if (data.error) {\r\n                    alert(data.message)\r\n                } else {\r\n                    alert('Música deletada com sucesso.')\r\n                    dispatch({ type: 'update' })\r\n                    const newMyMusics = [...myMusics]\r\n                    newMyMusics.splice(index, 1)\r\n                    setMyMusics(newMyMusics)\r\n                }\r\n            } catch(err) {\r\n                alert('Ocorreu um erro ao deletar a música.')\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function run() {\r\n            try {\r\n                const { data } = await api.get('/music/my', {\r\n                    headers: {\r\n                        email,\r\n                        token\r\n                    }\r\n                })\r\n                setMyMusics(data)\r\n            } catch(err) {\r\n                alert('Um erro ocorreu.')\r\n            }\r\n        }\r\n        run()\r\n        function contextMenu(evt: MouseEvent) {\r\n            setContextMenuCoordinates({\r\n                x: evt.x,\r\n                y: evt.y >= (window.innerHeight - 120) ? evt.y - 120 : evt.y\r\n            })\r\n        }\r\n        function click() {\r\n            setContextMenuCoordinates({\r\n                x: -500,\r\n                y: -500\r\n            })\r\n            setContextMenuVisible(false)\r\n        }\r\n        document.addEventListener('contextmenu', contextMenu)\r\n        document.addEventListener('click', click)\r\n        return () => {\r\n            document.removeEventListener('contextmenu', contextMenu)\r\n            document.removeEventListener('click', click)\r\n        }\r\n    }, [])\r\n\r\n    return <Container shrink={musicIsLoaded}>\r\n        <ContextMenuMusic\r\n            visible={contextMenuVisible}\r\n            x={contextMenuCoordinates.x}\r\n            y={contextMenuCoordinates.y}\r\n            music={actualMusic}\r\n        />\r\n        {myMusics.map((myMusic, index) => <MusicItem\r\n            onMouseDown={handleContextMenu(myMusic) as any}\r\n            key={myMusic.name_upload}>\r\n            <MusicInfo\r\n                onClick={handleSeeMusic(myMusic.id) as any}\r\n            >\r\n                <MusicImg\r\n                    src={`${url}/music-bg/${myMusic.music_background}`}\r\n                />\r\n                <div>\r\n                    <MusicName>{myMusic.name}</MusicName>\r\n                    <MusicName><strong>Acessos: </strong>{myMusic.access}</MusicName>\r\n                </div>\r\n            </MusicInfo>\r\n            <div>\r\n                <Edit\r\n                    onClick={handleSeeMusic(myMusic.id) as any}\r\n                    size={20}\r\n                    color=\"#d9dadc\"\r\n                />\r\n                <Trash2\r\n                    onClick={handleDeleteMusic(myMusic.name_upload, index) as any}\r\n                    size={20}\r\n                    color=\"#d9dadc\"\r\n                />\r\n            </div>\r\n        </MusicItem>)}\r\n    </Container>\r\n}\r\n\r\nexport default MyMusics","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #36393f;\r\n\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const ReturnContainer = styled.div`\r\n    width: 100%;\r\n    height: 20px;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n`\r\n\r\nexport const ReturnButton = styled.button`\r\n    width: 30px;\r\n    height: 30px;\r\n`\r\n\r\nexport const PlayerContainer = styled.div`\r\n    display: flex;\r\n    flex: 1;\r\n\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\n\r\nexport const InfoContainer = styled.div`\r\n    width: 50%;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n`\r\n\r\nexport const InfoImg: any = styled.img`\r\n    width: ${(props: any) => props.hasImage ? 150 : 100}px;\r\n    height: ${(props: any) => props.hasImage ? 75 : 100}px;\r\n\r\n    margin: 0 10px;\r\n`\r\n\r\nexport const InfoMusicContainer = styled.div`\r\n    width: 50%;\r\n    height: 75px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const InfoName = styled.span`\r\n    color: #d9dadc;\r\n    font-weight: bold;\r\n`\r\n\r\nexport const InfoNameInput = styled.div`\r\n    border-radius: 10px;\r\n    padding: 1px 2.5px;\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    & > input {\r\n        width: 80%;\r\n        font-weight: bold;\r\n        font-size: 16px;\r\n        color: #d9dadc;\r\n    }\r\n\r\n    &:hover {\r\n        border: 1px solid #d9dadc;\r\n    }\r\n\r\n    & > button {\r\n        margin: 0 5px;\r\n    }\r\n`\r\n\r\nexport const ErrorContainer = styled.div`\r\n    border: 1.5px solid #c82333;\r\n    border-radius: 10px;\r\n\r\n    width: 200px;\r\n    padding: 5px;\r\n`\r\n\r\nexport const ErrorMessage = styled.p`\r\n    color: #c82333;\r\n`\r\n\r\nexport const InfoMusics = styled.span`\r\n    color: #d9dadc;\r\n`\r\n\r\nexport const PlayButton = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    align-self: flex-end;\r\n\r\n    background-color: #4c43df;\r\n    border-radius: 50%;\r\n\r\n    width: 50px;\r\n    height: 50px;\r\n    margin: 20px;\r\n\r\n    & > svg {\r\n        fill: #d9dadc;\r\n    }\r\n    &:hover {\r\n        background-color: #2c23bf;\r\n    }\r\n    &:active {\r\n        background-color: #09039e;\r\n    }\r\n`\r\n\r\nexport const MusicsContainer = styled.div`\r\n    width: 100%;\r\n    height: 400px;\r\n    overflow: auto;\r\n\r\n    @media (max-height: 664px) {\r\n        height: 320px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        width: 5px;\r\n        height: 5px;\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #3e3e3e;\r\n        border-radius: 10px;\r\n    }\r\n`\r\n\r\n\r\nexport const MusicItem: any = styled.button`\r\n    width: 100%;\r\n    height: 40px;\r\n    color: #d9dadc;\r\n    \r\n    border-radius: 10px;\r\n    margin: 10px 0;\r\n    font-size: 12px;\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    transition: background-color .2s linear;\r\n\r\n    &:hover {\r\n        background-color: rgba(0, 0, 0, 0.2);\r\n    }\r\n    &:active {\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n    }\r\n`\r\n\r\nexport const MusicConfig: any = styled.div`\r\n    display: flex;\r\n    flex: 1;\r\n`\r\n\r\nexport const MusicImage = styled.img`\r\n    width: 80px;\r\n    height: 100%;\r\n    margin: 0 5px;\r\n`\r\n\r\nexport const MusicDrag = styled.div`\r\n    width: 100px;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n\r\n    & > button > svg {\r\n        margin-right: 10px;\r\n        transition: stroke .2s linear;\r\n    }\r\n\r\n    &:hover > button > svg {\r\n        stroke: #b9babc;\r\n    }\r\n\r\n    &:active > button > svg {\r\n        stroke: #a9aaac;\r\n    }\r\n`","import React, { useState, useEffect, useRef, ChangeEvent } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport {\r\n    Eye,\r\n    Share,\r\n    ArrowLeft,\r\n    Edit,\r\n    Play,\r\n    ArrowUp,\r\n    ArrowDown,\r\n    Trash2,\r\n    Plus\r\n} from 'react-feather'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport {\r\n    Container,\r\n    ReturnContainer,\r\n    ReturnButton,\r\n    PlayerContainer,\r\n    InfoContainer,\r\n    InfoImg,\r\n    InfoMusicContainer,\r\n    InfoName,\r\n    InfoNameInput,\r\n    ErrorContainer,\r\n    ErrorMessage,\r\n    InfoMusics,\r\n    PlayButton,\r\n    MusicsContainer,\r\n    MusicItem,\r\n    MusicConfig,\r\n    MusicImage,\r\n    MusicDrag\r\n} from './styles'\r\n\r\nimport ContextMenuMusic from '../../components/ContextMenuMusic'\r\n\r\nimport api from '../../services/api'\r\nimport url from '../../services/url'\r\n\r\nimport logo from '../../images/logo.png'\r\n\r\nconst initialState: Music = {\r\n    access: 0,\r\n    description: '',\r\n    keywords: [],\r\n    music_background: '',\r\n    name: '',\r\n    name_upload: '',\r\n    type: '',\r\n    user_owner: {\r\n        avatar: '',\r\n        name: '',\r\n        id: 0\r\n    },\r\n    id: 0,\r\n    createdAt: '',\r\n    editable: false\r\n}\r\n\r\nconst initialStatePlaylist: Playlist = {\r\n    id: 0,\r\n    musics: [],\r\n    name: '',\r\n    public: false,\r\n    editable: false\r\n}\r\n\r\nfunction Playlist(): JSX.Element {\r\n\r\n    const email = localStorage.getItem('email')\r\n    const token = localStorage.getItem('token')\r\n\r\n    const nameInput = useRef<any>()\r\n\r\n    const history = useHistory()\r\n    const { id } = useParams() as any\r\n\r\n    const dispatch = useDispatch()\r\n    const actualIndex: number = useSelector((store: any) => store.actualIndex)\r\n\r\n    const [contextMenu, setContextMenu] = useState<boolean>(false)\r\n    const [contextMenuCoordinates, setContextMenuCoordinates] = useState<CustomCoordinates>({\r\n        x: -500,\r\n        y: -500\r\n    })\r\n    const [contextMenuMusic, setContextMenuMusic] = useState<Music>(initialState)\r\n\r\n    const [loaded, setLoaded] = useState<boolean>(false)\r\n\r\n    const [error, setError] = useState<boolean>(false)\r\n    const [errorMessage, setErrorMessage] = useState<string>('')\r\n\r\n    const [playlist, setPlaylist] = useState<Playlist>(initialStatePlaylist)\r\n    const [initialName, setInitialName] = useState<string>('')\r\n    const [name, setName] = useState<string>('')\r\n    const [musics, setMusics] = useState<Array<Music>>([])\r\n    const [owner, setOwner] = useState<string>('')\r\n\r\n    function handleSeeMusic(id: number): Function {\r\n        return function() {\r\n            history.push(`/app/music/${id}`)\r\n        }\r\n    }\r\n\r\n    function handleContextMenu(music: Music): Function {\r\n        return function(evt: MouseEvent) {\r\n            if (evt.button === 2) {\r\n                setContextMenu(true)\r\n                setContextMenuMusic(music)\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleGoBack(): void {\r\n        history.goBack()\r\n    }\r\n\r\n    function handleChangeName(evt: ChangeEvent<HTMLInputElement>) {\r\n        setName(evt.target.value)\r\n    }\r\n\r\n    function handleKeyDown(evt: globalThis.KeyboardEvent) {\r\n        if (evt.code === 'Enter') {\r\n            nameInput.current.blur()\r\n        }\r\n    }\r\n\r\n    async function saveName() {\r\n        if (name !== initialName) {\r\n            try {\r\n                const { data } = await api.patch('/playlists/rename', {\r\n                    name: initialName,\r\n                    newName: name\r\n                }, {\r\n                    headers: {\r\n                        email,\r\n                        token\r\n                    }\r\n                })\r\n                if (data.error) {\r\n                    setError(true)\r\n                    setErrorMessage(data.message)\r\n                } else {\r\n                    dispatch({ type: 'rename-playlists', payload: name, index: actualIndex })\r\n                    setInitialName(name)\r\n                }\r\n            } catch(err) {\r\n                setError(true)\r\n                setErrorMessage('Ocorreu um erro ao renomear a playlist')\r\n            }\r\n        }\r\n    }\r\n\r\n    function handlePlayPlaylist(): Function {\r\n        return function() {\r\n            dispatch({ type: 'disactive-music-is-loaded' })\r\n            setTimeout(() => {\r\n                dispatch({ type: 'rename-playlist', payload: initialName })\r\n                dispatch({ type: 'change-playlist', payload: musics })\r\n                dispatch({ type: 'active-playlist' })\r\n                dispatch({ type: 'active-music-is-loaded' })\r\n            }, 1)\r\n        }\r\n    }\r\n\r\n    function handleMoveMusic(index: number, type: 'up' | 'down'): Function {\r\n        return async function() {\r\n            const music: Music = musics[index]\r\n            const newMusics = [...musics]\r\n            switch (type) {\r\n                case 'up':\r\n                    try {\r\n                        const { data } = await api.patch('/playlists/move', {\r\n                            index,\r\n                            newIndex: index - 1,\r\n                            name: initialName\r\n                        }, {\r\n                            headers: {\r\n                                email,\r\n                                token\r\n                            }\r\n                        })\r\n                        if (data.error) {\r\n                            setError(true)\r\n                            setErrorMessage(data.message)\r\n                        } else {\r\n                            newMusics.splice(index, 1)\r\n                            newMusics.splice(index - 1, 0, music)\r\n                            setMusics(newMusics)\r\n                        }\r\n                    } catch(err) {\r\n                        setError(true)\r\n                        setErrorMessage('Ocorreu um erro ao mover a musica')\r\n                    }\r\n                    break\r\n                case 'down':\r\n                    try {\r\n                        const { data } = await api.patch('/playlists/move', {\r\n                            index,\r\n                            newIndex: index + 1,\r\n                            name: initialName\r\n                        }, {\r\n                            headers: {\r\n                                email,\r\n                                token\r\n                            }\r\n                        })\r\n                        if (data.error) {\r\n                            setError(true)\r\n                            setErrorMessage(data.message)\r\n                        } else {\r\n                            newMusics.splice(index, 1)\r\n                            newMusics.splice(index + 1, 0, music)\r\n                            setMusics(newMusics)\r\n                        }\r\n                    } catch(err) {\r\n                        setError(true)\r\n                        setErrorMessage('Ocorreu um erro ao mover a musica')\r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleDeleteMusic(index: number): Function {\r\n        return async function() {\r\n            try {\r\n                const { data } = await api.patch('/playlists/delete', {\r\n                    index,\r\n                    name: initialName\r\n                }, {\r\n                    headers: {\r\n                        email,\r\n                        token\r\n                    }\r\n                })\r\n                if (data.error) {\r\n                    setError(true)\r\n                    setErrorMessage(data.message)\r\n                } else {\r\n                    const newMusics: Array<Music> = [...musics]\r\n                    newMusics.splice(index, 1)\r\n                    setMusics(newMusics)\r\n                    dispatch({ type: 'remove-playlists', index: actualIndex, payload: index })\r\n                }\r\n            } catch(err) {\r\n                setError(true)\r\n                setErrorMessage('Ocorreu um erro ao tentar deletar a música da playlist')\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyDown)\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setLoaded(false)\r\n        async function run() {\r\n            const { data } = await api.get(`/playlists/${id}`, {\r\n                headers: {\r\n                    email,\r\n                    token\r\n                }\r\n            })\r\n            if (data.error) {\r\n                setError(true)\r\n                setErrorMessage(data.message)\r\n            } else {\r\n                setError(false)\r\n                setErrorMessage('')\r\n                setPlaylist(data)\r\n                setInitialName(data.name)\r\n                setName(data.name)\r\n                setMusics(data.musics)\r\n                setOwner(data.owner)\r\n            }\r\n        }\r\n\r\n        function click() {\r\n            setContextMenu(false)\r\n            setContextMenuCoordinates({\r\n                x: -500,\r\n                y: -500\r\n            })\r\n        }\r\n        function contextMenu(evt: MouseEvent) {\r\n            const config: CustomCoordinates = {\r\n                x: evt.x,\r\n                y: 0\r\n            }\r\n            if (evt.y > (window.innerHeight / 100) * 80) {\r\n                config.y = evt.y - 120\r\n            } else {\r\n                config.y = evt.y - 30\r\n            }\r\n            setContextMenuCoordinates(config)\r\n        }\r\n        document.addEventListener('click', click)\r\n        document.addEventListener('contextmenu', contextMenu)\r\n        \r\n        run()\r\n        setLoaded(true)\r\n        return () => {\r\n            document.removeEventListener('click', click)\r\n            document.removeEventListener('contextmenu', contextMenu)\r\n        }\r\n    }, [id])\r\n\r\n    if (!loaded) {\r\n        return <Container/>\r\n    }\r\n\r\n    return <Container>\r\n        <ContextMenuMusic\r\n            visible={contextMenu}\r\n            x={contextMenuCoordinates.x}\r\n            y={contextMenuCoordinates.y}\r\n            music={contextMenuMusic}\r\n        />\r\n        <ReturnContainer>\r\n            <ReturnButton onClick={handleGoBack}>\r\n                <ArrowLeft\r\n                    color=\"#d9dadc\"\r\n                    size={20}\r\n                />\r\n            </ReturnButton>\r\n        </ReturnContainer>\r\n        <PlayerContainer>\r\n            <InfoContainer>\r\n                <InfoImg\r\n                    hasImage={!!musics[0]}\r\n                    src={musics[0] ? `${url}/music-bg/${musics[0].music_background}` : logo}\r\n                />\r\n                <InfoMusicContainer>\r\n                    {playlist.editable ?\r\n                        <InfoNameInput>\r\n                            <input\r\n                                ref={nameInput}\r\n                                value={name}\r\n                                maxLength={20}\r\n                                onChange={handleChangeName}\r\n                                onBlur={saveName}\r\n                            />\r\n                            <button onClick={() => nameInput.current.focus()}>\r\n                                <Edit\r\n                                    color=\"#d9dadc\"\r\n                                    size={20}\r\n                                />\r\n                            </button>\r\n                        </InfoNameInput> : \r\n                        <InfoName>{name}</InfoName>}\r\n                    <InfoMusics>{musics.length} Música{musics.length < 2 ? '' : 's'}</InfoMusics>\r\n                    <InfoMusics>Feita por: {owner}</InfoMusics>\r\n                </InfoMusicContainer>\r\n                {error ? <ErrorContainer>\r\n                    <ErrorMessage>{errorMessage}</ErrorMessage>\r\n                </ErrorContainer> : null}\r\n            </InfoContainer>\r\n            {musics.length > 0 ? <PlayButton onClick={handlePlayPlaylist() as any}>\r\n                <Play\r\n                    color=\"#d9dadc\"\r\n                    size={26}\r\n                />\r\n            </PlayButton> : null}\r\n        </PlayerContainer>\r\n        <MusicsContainer>\r\n            {musics.map((music, index) => <MusicItem\r\n                key={index}\r\n                onMouseDown={handleContextMenu(music) as any}\r\n            >\r\n                <MusicConfig onClick={handleSeeMusic(music.id) as any}>\r\n                    <MusicImage\r\n                        src={`${url}/music-bg/${music.music_background}`}\r\n                    />\r\n                    <div style={{ textAlign: 'left' }}>\r\n                        <strong>{music.name}</strong>\r\n                        <p>Enviado por: {music.user_owner.name}</p>\r\n                        <p>Acessos: {music.access}</p>\r\n                    </div>\r\n                </MusicConfig>\r\n                <MusicDrag>\r\n                    {(index > 0 && playlist.editable) ? <button\r\n                        onClick={handleMoveMusic(index, 'up') as any}\r\n                    >\r\n                        <ArrowUp\r\n                            size={20}\r\n                            color=\"#d9dadc\"\r\n                        />\r\n                    </button> : null}\r\n                    {(index < musics.length - 1 && playlist.editable) ? <button\r\n                        onClick={handleMoveMusic(index, 'down') as any}\r\n                    >\r\n                        <ArrowDown\r\n                            size={20}\r\n                            color=\"#d9dadc\"\r\n                        />\r\n                    </button> : null}\r\n                    {playlist.editable ? <button\r\n                        onClick={handleDeleteMusic(index) as any}\r\n                    >\r\n                        <Trash2\r\n                            size={20}\r\n                            color=\"#d9dadc\"\r\n                        />\r\n                    </button> : null}\r\n                </MusicDrag>\r\n            </MusicItem>)}\r\n        </MusicsContainer>\r\n    </Container>\r\n}\r\n\r\nexport default Playlist","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #36393f;\r\n\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n`\r\n\r\nexport const SearchContainer = styled.div`\r\n    width: 100%;\r\n    height: 5%;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const SearchButton = styled.button`\r\n    background-color: transparent;\r\n`\r\n\r\nexport const SearchInput = styled.input`\r\n    width: 25%;\r\n    height: 80%;\r\n    background-color: #d9dadc;\r\n\r\n    margin-left: 10px;\r\n\r\n    border-radius: 15px;\r\n\r\n    box-sizing: border-box;\r\n    padding: 5px;\r\n`\r\n\r\nexport const MusicTypeButtonContainer = styled.div`\r\n    width: 100%;\r\n    height: ${() => (window.innerHeight / 100) * 66}px;\r\n\r\n    overflow: auto;\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        width: 7px;\r\n        height: 5px;\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #3e3e3e;\r\n        border-radius: 10px;\r\n    }\r\n`\r\n\r\nexport const MusicTypeButton: any = styled.button`\r\n    background-image: linear-gradient(to right bottom, black, ${(props: any) => props.color || '#4c43df'} 15%);\r\n\r\n    width: 120px;\r\n    height: 120px;\r\n\r\n    margin: 10px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n`\r\n\r\nexport const MusicTypeButtonName = styled.span`\r\n    color: #d9dadc;\r\n    font-weight: bold;\r\n`\r\n\r\nexport const MusicTypeButtonImage = styled.img`\r\n    width: 40px;\r\n    height: 40px;\r\n\r\n    margin-top: 40%;\r\n    margin-left: 50%;\r\n\r\n    transform: rotate(40deg);\r\n`","import React, { useState, useEffect } from 'react'\r\nimport { Search as SearchIcon } from 'react-feather'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n    Container,\r\n    SearchButton,\r\n    SearchContainer,\r\n    SearchInput,\r\n    MusicTypeButtonContainer,\r\n    MusicTypeButton,\r\n    MusicTypeButtonName,\r\n    MusicTypeButtonImage\r\n} from './styles'\r\n\r\nimport api from '../../services/api'\r\nimport url from '../../services/url'\r\n\r\ninterface MusicType {\r\n    label: string\r\n    value: string\r\n    img?: string\r\n    color?: string\r\n}\r\n\r\nfunction Search(): JSX.Element {\r\n\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [musicTypes, setMusicTypes] = useState<Array<MusicType>>([])\r\n    const [searchValue, setSearchValue] = useState<string>('')\r\n\r\n    function handleSearchByType(type: MusicType): Function {\r\n        return function () {\r\n            history.push(`/app/genre/${type.value}`)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function run() {\r\n            try {\r\n                const { data } = await api.get('/music-types')\r\n                setMusicTypes(data)\r\n            } catch(err) {\r\n                alert('Um erro ocorreu.')\r\n            }\r\n        }\r\n        run()\r\n    }, [])\r\n\r\n    return <Container>\r\n        <SearchContainer>\r\n            <SearchButton>\r\n                <SearchIcon\r\n                    color=\"#d9dadc\"\r\n                    size={26}\r\n                />\r\n            </SearchButton>\r\n            <SearchInput\r\n                placeholder=\"Pesquise uma música\"\r\n                value={searchValue}\r\n                onChange={e => setSearchValue(e.target.value)}\r\n            />\r\n        </SearchContainer>\r\n        <MusicTypeButtonContainer>\r\n            {musicTypes.map(musicType => <MusicTypeButton\r\n                key={musicType.value}\r\n                color={musicType.color}\r\n                onClick={handleSearchByType(musicType) as any}\r\n            >\r\n                <MusicTypeButtonName>{musicType.label}</MusicTypeButtonName>\r\n                {musicType.img ? <MusicTypeButtonImage\r\n                    src={url + '/types-img/' + musicType.img}\r\n                /> : null}\r\n            </MusicTypeButton>)}\r\n        </MusicTypeButtonContainer>\r\n    </Container>\r\n}\r\n\r\nexport default Search","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #36393f;\r\n\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n\r\n    & > label {\r\n        display: flex;\r\n        justify-content: center;\r\n        margin: 10px 0;\r\n    }\r\n`\r\n\r\nexport const AvatarImageContainer = styled.div`\r\n    width: 60px;\r\n    height: 60px;\r\n\r\n    cursor: pointer;\r\n`\r\n\r\nexport const AvatarImage = styled.img`\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 30px;\r\n`\r\n\r\nexport const AvatarInput = styled.input`\r\n    width: 0;\r\n    height: 0;\r\n    display: none;\r\n`\r\n\r\nexport const UserInput = styled.input`\r\n    background-color: #d9dadc;\r\n    border-radius: 10px;\r\n\r\n    width: 200px;\r\n    \r\n    margin-left: 10px;\r\n    padding: 5px 10px;\r\n`\r\n\r\nexport const SaveButton = styled.button`\r\n    background-color: #218838;\r\n\r\n    color: #d9dadc;\r\n\r\n    padding: 10px 20px;\r\n    border-radius: 10px;\r\n    margin: 5px 0;\r\n\r\n    transition: background-color .2s linear;\r\n\r\n    &:hover {\r\n        background-color: #016818;\r\n    }\r\n\r\n    &:active {\r\n        background-color: #003800;\r\n    }\r\n`\r\n\r\nexport const ErrorContainer = styled.div`\r\n    width: 230px;\r\n    height: 40px;\r\n    background-color: #d9dadc;\r\n    border: 2px solid #c82333;\r\n    border-radius: 10px;\r\n\r\n    margin: 5px 0;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const ErrorMessage = styled.p`\r\n    color: #c82333;\r\n`\r\n\r\nexport const OperationContainer = styled.div`\r\n    width: 250px;\r\n    height: 80px;\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    margin-top: 10%;\r\n`\r\n\r\nexport const OperationLeave = styled.button`\r\n    background-color: #4c43df;\r\n    color: #d9dadc;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n`\r\n\r\nexport const OperationDelete = styled.button`\r\n    background-color: #c82333;\r\n    color: #d9dadc;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n`","import styled from 'styled-components'\r\n\r\nconst Divider: any = styled.div`\r\n    width: ${(props: any) => props.customWidth};\r\n    height: 2px;\r\n    margin: 10px 0;\r\n    background-color: #d9dadc;\r\n`\r\nexport default Divider","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n    User as UserIcon,\r\n    AtSign,\r\n    Lock,\r\n    LogOut,\r\n    Trash2\r\n} from 'react-feather'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n    Container,\r\n    AvatarImageContainer,\r\n    AvatarImage,\r\n    AvatarInput,\r\n    UserInput,\r\n    SaveButton,\r\n    ErrorContainer,\r\n    ErrorMessage,\r\n    OperationContainer,\r\n    OperationLeave,\r\n    OperationDelete\r\n} from './styles'\r\n\r\nimport api from '../../services/api'\r\nimport url from '../../services/url'\r\n\r\nimport logo from '../../images/logo.png'\r\n\r\nimport Divider from '../../components/Divider'\r\n\r\ninterface Avatar {\r\n    name: string\r\n    uri: string\r\n    type: string\r\n}\r\n\r\nfunction User(): JSX.Element {\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const avatarInput = useRef<any>()\r\n\r\n    const [updates, setUpdates] = useState<number>(0)\r\n\r\n    const [error, setError] = useState<boolean>(false)\r\n    const [errorMessage, setErrorMessage] = useState<string>('')\r\n\r\n    const [avatar, setAvatar] = useState<Avatar | null>()\r\n    const [name, setName] = useState<string>('')\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [newPassword, setNewPassword] = useState<string>('')\r\n\r\n    const [initialAvatar, setInitialAvatar] = useState<Avatar | null>()\r\n    const [initialName, setInitialName] = useState<string>('')\r\n    const [initialEmail, setInitialEmail] = useState<string>('')\r\n\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n\r\n    function handleChangeAvatar() {\r\n        if (avatarInput.current && avatarInput.current.files[0]) {\r\n            const file = avatarInput.current.files[0]\r\n            const fileReader = new FileReader()\r\n\r\n            fileReader.onloadend = () => {\r\n                setAvatar({\r\n                    name: file.name,\r\n                    type: file.type,\r\n                    uri: fileReader.result as string\r\n                })\r\n            }\r\n            fileReader.readAsDataURL(file)\r\n        }\r\n    }\r\n\r\n    async function handleSaveChanges() {\r\n        setLoading(true)\r\n        try {\r\n            const formData = new FormData()\r\n            formData.append('password', password)\r\n            if (name !== initialName) {\r\n                formData.append('name', name)\r\n            }\r\n            if (email !== initialEmail) {\r\n                formData.append('email', email)\r\n            }\r\n            if (avatar !== initialAvatar) {\r\n                formData.append('avatar', avatarInput.current.files[0])\r\n            }\r\n            if (newPassword) {\r\n                formData.append('newPassword', newPassword)\r\n            }\r\n            const { data } = await api.patch('/user', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/formdata',\r\n                    email: localStorage.getItem('email'),\r\n                    token: localStorage.getItem('token')\r\n                }\r\n            })\r\n            if (data.error) {\r\n                setError(true)\r\n                setErrorMessage(data.message)\r\n            } else {\r\n                if (email !== initialEmail) {\r\n                    localStorage.setItem('email', data.email)\r\n                    localStorage.setItem('token', data.token)\r\n                }\r\n                setPassword('')\r\n                setUpdates(updates + 1)\r\n            }\r\n        } catch(err) {\r\n            setError(true)\r\n            setErrorMessage('Um erro ocorreu.')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    function clean(): void {\r\n        dispatch({ type: 'clean-audio' })\r\n        dispatch({ type: 'clean-playlist' })\r\n        dispatch({ type: 'disactive-music-is-loaded' })\r\n        dispatch({ type: 'clean-music' })\r\n    }\r\n\r\n    function handleLeaveAccount(): void {\r\n        clean()\r\n\r\n        localStorage.removeItem('email')\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('rememberme')\r\n        history.push('/')\r\n    }\r\n\r\n    async function handleDeleteAccount() {\r\n        try {\r\n            const email = localStorage.getItem('email')\r\n            const token = localStorage.getItem('token')\r\n            const { data } = await api.delete('/user', {\r\n                headers: {\r\n                    email,\r\n                    token\r\n                }\r\n            })\r\n            if (data.error) {\r\n                setError(true)\r\n                setErrorMessage(data.message)\r\n            } else {\r\n                alert('Conta deletada com sucesso.')\r\n                clean()\r\n                \r\n                localStorage.removeItem('email')\r\n                localStorage.removeItem('token')\r\n                localStorage.removeItem('rememberme')\r\n                history.push('/')\r\n            }\r\n        } catch(err) {\r\n            setError(true)\r\n            setErrorMessage('Um erro ocorreu.')\r\n        }\r\n    }\r\n\r\n    function verifyCanSave(): boolean {\r\n        if (avatar !== initialAvatar) {\r\n            return true\r\n        }\r\n        if (name !== initialName) {\r\n            return true\r\n        }\r\n        if (email !== initialEmail) {\r\n            return true\r\n        }\r\n        if (newPassword) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function run() {\r\n            const email = localStorage.getItem('email')\r\n            const token = localStorage.getItem('token')\r\n\r\n            try {\r\n                const { data } = await api.get('/user', {\r\n                    headers: {\r\n                        email,\r\n                        token\r\n                    }\r\n                })\r\n                if (data.error) {\r\n                    setError(true)\r\n                    setErrorMessage(data.message)\r\n                } else {\r\n                    let avatar: Avatar | null\r\n                    if (data.avatar) {\r\n                        avatar = {\r\n                            name: data.avatar,\r\n                            uri: `${url}/avatar/${data.avatar}`,\r\n                            type: 'image/png'\r\n                        }\r\n                        setInitialAvatar(avatar)\r\n                        setAvatar(avatar)\r\n                    } else {\r\n                        setInitialAvatar(null)\r\n                        setAvatar(null)\r\n                    }\r\n\r\n                    setName(data.name)\r\n                    setInitialName(data.name)\r\n\r\n                    setEmail(data.email)\r\n                    setInitialEmail(data.email)\r\n                }\r\n            } catch(err) {\r\n                setError(true)\r\n                setErrorMessage('Um erro ocorreu.')\r\n            }\r\n        }\r\n        run()\r\n    }, [updates])\r\n\r\n    return <Container>\r\n        <label>\r\n            <AvatarImageContainer>\r\n                <AvatarImage\r\n                    src={avatar ? avatar.uri : logo}\r\n                />\r\n            </AvatarImageContainer>\r\n            <AvatarInput\r\n                ref={avatarInput}\r\n                type=\"file\"\r\n                accept=\"image/png,image/jpeg\"\r\n                onChange={handleChangeAvatar}\r\n            />\r\n        </label>\r\n        <label>\r\n            <UserIcon\r\n                color=\"#d9dadc\"\r\n                size={26}\r\n            />\r\n            <UserInput\r\n                disabled={loading}\r\n                type=\"text\"\r\n                placeholder=\"Nome\"\r\n                value={name}\r\n                onChange={({ target }) => setName(target.value)}\r\n            />\r\n        </label>\r\n        <label>\r\n            <AtSign\r\n                color=\"#d9dadc\"\r\n                size={26}\r\n            />\r\n            <UserInput\r\n                disabled={loading}\r\n                type=\"text\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={({ target }) => setEmail(target.value)}\r\n            />\r\n        </label>\r\n        <label>\r\n            <Lock\r\n                color=\"#d9dadc\"\r\n                size={26}\r\n            />\r\n            <UserInput\r\n                disabled={loading}\r\n                type=\"password\"\r\n                placeholder=\"Nova senha (opcional)\"\r\n                value={newPassword}\r\n                onChange={({ target }) => setNewPassword(target.value)}\r\n            />\r\n        </label>\r\n        <Divider\r\n            customWidth=\"30%\"\r\n        />\r\n        <label>\r\n            <Lock\r\n                color=\"#d9dadc\"\r\n                size={26}\r\n            />\r\n            <UserInput\r\n                disabled={loading}\r\n                type=\"password\"\r\n                placeholder=\"Senha para confirmar alterações\"\r\n                value={password}\r\n                onChange={({ target }) => setPassword(target.value)}\r\n            />\r\n        </label>\r\n        {error ? <ErrorContainer>\r\n            <ErrorMessage>{errorMessage}</ErrorMessage>\r\n        </ErrorContainer> : null}\r\n        {(verifyCanSave()) ? <SaveButton onClick={handleSaveChanges} disabled={loading}>\r\n            <span>Salvar alterações</span>\r\n        </SaveButton> : null}\r\n        <OperationContainer>\r\n            <OperationLeave onClick={handleLeaveAccount}>\r\n                <LogOut\r\n                    color=\"#d9dadc\"\r\n                    size={26}\r\n                />\r\n                <span>Sair da conta</span>\r\n            </OperationLeave>\r\n            <OperationDelete onClick={handleDeleteAccount}>\r\n                <Trash2\r\n                    color=\"#d9dadc\"\r\n                    size={26}\r\n                />\r\n                <span>Deletar conta</span>\r\n            </OperationDelete>\r\n        </OperationContainer>\r\n    </Container>\r\n}\r\n\r\nexport default User","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #36393f;\r\n`\r\n\r\nexport const Header = styled.header`\r\n    width: 100%;\r\n    height: 10%;\r\n\r\n    border-bottom: 1px solid #d9dadc;\r\n\r\n    box-sizing: border-box;\r\n    padding: 0 10px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const HeaderImg = styled.img`\r\n    width: 40px;\r\n    height: 40px;\r\n    margin: 0 10px;\r\n`\r\n\r\nexport const HeaderText = styled.p`\r\n    color: #d9dadc;\r\n    font-weight: bold;\r\n`\r\n\r\nexport const Main: any = styled.main`\r\n    width: 100%;\r\n    height: ${(props: any) => props.shrink ? ((window.innerHeight / 100) * 90) - 100 : (window.innerHeight / 100) * 90}px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n\r\n    overflow: auto;\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        width: 7px;\r\n        height: 5px;\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #3e3e3e;\r\n        border-radius: 10px;\r\n    }\r\n`\r\n\r\nexport const InputContainer = styled.div`\r\n    width: 300px;\r\n    margin: 5px;\r\n`\r\n\r\nexport const InputTitle = styled.p`\r\n    color: #d9dadc;\r\n    text-align: center;\r\n\r\n    margin: 5px 0;\r\n`\r\n\r\nexport const InputDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nexport const Input = styled.input`\r\n    flex: 1;\r\n\r\n    background-color: #d9dadc;\r\n    padding: 5px;\r\n    border-radius: 10px;\r\n\r\n    margin: 0 5px;\r\n`\r\n\r\nexport const TextArea = styled.textarea`\r\n    flex: 1;\r\n    height: 100px;\r\n\r\n    background-color: #d9dadc;\r\n    padding: 5px;\r\n    border-radius: 10px;\r\n\r\n    margin: 0 5px;\r\n    resize: none;\r\n`\r\n\r\nexport const RadioContainer = styled.div`\r\n    width: 300px;\r\n    height: 70px;\r\n\r\n    overflow: auto;\r\n\r\n    display: flex;\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        width: 7px;\r\n        height: 5px;\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #3e3e3e;\r\n        border-radius: 10px;\r\n    }\r\n`\r\n\r\nexport const RadioItem = styled.label`\r\n    cursor: pointer;\r\n\r\n    margin: 0 5px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const RadioInput = styled.input`\r\n    width: 0;\r\n    height: 0;\r\n    opacity: 0;\r\n`\r\n\r\nexport const RadioInputDiv = styled.div`\r\n    width: 15px;\r\n    height: 15px;\r\n    border-radius: 7.5px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    transition: background-color .2s linear;\r\n\r\n    & + p {\r\n        transition: color .2s linear;\r\n    }\r\n`\r\n\r\nexport const ButtonInput = styled.input`\r\n    width: 0;\r\n    height: 0;\r\n    opacity: 0;\r\n`\r\n\r\nexport const Button = styled.div`\r\n    padding: 5px 15px;\r\n\r\n    color: #d9dadc;\r\n    border: 1.5px solid #d9dadc;\r\n    border-radius: 10px;\r\n\r\n    cursor: pointer;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const ButtonImg = styled.img`\r\n    width: 100px;\r\n    height: 50px;\r\n`\r\n\r\nexport const ErrorContainer = styled.div`\r\n    border: 1.5px solid #c82333;\r\n    border-radius: 10px;\r\n\r\n    width: 200px;\r\n    padding: 5px;\r\n\r\n    margin-top: 5px;\r\n`\r\n\r\nexport const ErrorMessage = styled.p`\r\n    color: #c82333;\r\n`\r\n\r\nexport const SuccessContainer = styled.div`\r\n    background-color: #28a745;\r\n    border-radius: 10px;\r\n\r\n    width: 200px;\r\n    padding: 5px;\r\n\r\n    margin-top: 5px;\r\n`\r\n\r\nexport const SuccessMessage = styled.p`\r\n    color: #d9dadc;\r\n`\r\n\r\nexport const SaveButton = styled.button`\r\n    border-radius: 10px;\r\n    background-color: #4c43df;\r\n    padding: 7px 15px;\r\n\r\n    &:hover {\r\n        background-color: #2c23bf;\r\n    }\r\n    &:active {\r\n        background-color: #09039e;\r\n    }\r\n`\r\n\r\nexport const SaveButtonText = styled.p`\r\n    color: #d9dadc;\r\n`","import React, { useState, useEffect, useRef } from 'react'\r\nimport {\r\n    Type,\r\n    AlignLeft,\r\n    Key,\r\n    Plus\r\n} from 'react-feather'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport {\r\n    Container,\r\n    Header,\r\n    HeaderImg,\r\n    HeaderText,\r\n    Main,\r\n    InputContainer,\r\n    InputTitle,\r\n    InputDiv,\r\n    Input,\r\n    TextArea,\r\n    RadioContainer,\r\n    RadioItem,\r\n    RadioInput,\r\n    RadioInputDiv,\r\n    ButtonInput,\r\n    Button,\r\n    ButtonImg,\r\n    ErrorContainer,\r\n    ErrorMessage,\r\n    SaveButton,\r\n    SaveButtonText,\r\n    SuccessContainer,\r\n    SuccessMessage\r\n} from './styles'\r\n\r\nimport Divider from '../../components/Divider'\r\n\r\nimport api from '../../services/api'\r\n\r\nimport logo from '../../images/logo.png'\r\n\r\ninterface File {\r\n    name: string\r\n    uri: string\r\n    type: string\r\n}\r\n\r\ninterface Type {\r\n    label: string\r\n    value: string\r\n}\r\n\r\nconst initialState: File = {\r\n    name: '',\r\n    uri: '',\r\n    type: ''\r\n}\r\n\r\nfunction Upload() {\r\n\r\n    const email = localStorage.getItem('email')\r\n    const token = localStorage.getItem('token')\r\n\r\n    const musicIsLoaded = useSelector((store: any) => store.musicIsLoaded)\r\n\r\n    const imageInput = useRef<any>()\r\n    const audioInput = useRef<any>()\r\n\r\n    const [musicTypes, setMusicTypes] = useState<Array<Type>>([])\r\n\r\n    const [name, setName] = useState<string>('')\r\n    const [description, setDescription] = useState<string>('')\r\n    const [keywords, setKeywords] = useState<string>('')\r\n    const [type, setType] = useState<string>('')\r\n\r\n    const [image, setImage] = useState<File>({...initialState})\r\n    const [audio, setAudio] = useState<File>({...initialState})\r\n\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n\r\n    const [error, setError] = useState<boolean>(false)\r\n    const [errorMessage, setErrorMessage] = useState<string>('')\r\n\r\n    const [success, setSuccess] = useState<boolean>(false)\r\n\r\n    function clean() {\r\n        setLoading(false)\r\n        \r\n        setError(false)\r\n        setErrorMessage('')\r\n    }\r\n\r\n    function handleGetImage() {\r\n        if (imageInput.current) {\r\n            if (imageInput.current.files[0]) {\r\n                const fileReader = new FileReader()\r\n                fileReader.readAsDataURL(imageInput.current.files[0])\r\n                fileReader.onloadend = () => {\r\n                    setImage({\r\n                        name: imageInput.current.files[0].name,\r\n                        uri: fileReader.result as string,\r\n                        type: imageInput.current.files[0].type\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleGetAudio() {\r\n        if (audioInput.current) {\r\n            if (audioInput.current.files[0]) {\r\n                setAudio({\r\n                    name: audioInput.current.files[0].name,\r\n                    uri: '',\r\n                    type: audioInput.current.files[0].type\r\n                })\r\n            }\r\n        }\r\n    }\r\n    async function handleSendMusic() {\r\n        try {\r\n            if (!name) {\r\n                setSuccess(false)\r\n                setError(true)\r\n                setErrorMessage('Coloque um nome por favor.')\r\n                return\r\n            }\r\n            if (!description) {\r\n                setSuccess(false)\r\n                setError(true)\r\n                setErrorMessage('Coloque uma descrição por favor.')\r\n                return\r\n            }\r\n            if (!keywords) {\r\n                setSuccess(false)\r\n                setError(true)\r\n                setErrorMessage('Coloque palavras-chaves por favor.')\r\n                return\r\n            }\r\n            if (!image.uri) {\r\n                setSuccess(false)\r\n                setError(true)\r\n                setErrorMessage('Selecione uma imagem por favor.')\r\n                return\r\n            }\r\n            if (!audio.name) {\r\n                setSuccess(false)\r\n                setError(true)\r\n                setErrorMessage('Selecione uma música por favor.')\r\n                return\r\n            }\r\n            setLoading(true)\r\n\r\n            const formData = new FormData()\r\n            formData.append('name', name)\r\n            formData.append('description', description)\r\n            formData.append('keywords', keywords)\r\n            formData.append('musicType', type)\r\n            formData.append('music_background', imageInput.current.files[0])\r\n            formData.append('music', audioInput.current.files[0])\r\n\r\n            const { data } = await api.post('/audio', formData, {\r\n                headers: {\r\n                    email,\r\n                    token\r\n                }\r\n            })\r\n            if (data.error) {\r\n                setSuccess(false)\r\n                setError(true)\r\n                setErrorMessage(data.message)\r\n            } else {\r\n                setSuccess(true)\r\n                clean()\r\n            }\r\n        } catch(err) {\r\n            setSuccess(false)\r\n            setError(true)\r\n            setErrorMessage('Um erro ocorreu.')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        api.get('/music-types').then(({ data }) => {\r\n            setMusicTypes(data)\r\n        }).catch()\r\n    } , [])\r\n\r\n    return <Container>\r\n        <Header>\r\n            <HeaderImg\r\n                src={logo}\r\n                alt=\"Logo do app\"\r\n            />\r\n            <HeaderText>Poste uma música de sua preferência</HeaderText>\r\n        </Header>\r\n        <Main shrink={musicIsLoaded}>\r\n            <InputContainer>\r\n                <InputTitle>Coloque um nome</InputTitle>\r\n                <InputDiv>\r\n                    <Type\r\n                        size={20}\r\n                        color=\"#d9dadc\"\r\n                    />\r\n                    <Input\r\n                        disabled={loading}\r\n                        value={name}\r\n                        onChange={(e: any) => setName(e.target.value)}\r\n                        maxLength={30}\r\n                        placeholder=\"Nome\"\r\n                    />\r\n                </InputDiv>\r\n            </InputContainer>\r\n            <InputContainer>\r\n                <InputTitle>Coloque a descrição</InputTitle>\r\n                <InputDiv>\r\n                    <AlignLeft\r\n                        size={20}\r\n                        color=\"#d9dadc\"\r\n                    />\r\n                    <Input\r\n                        disabled={loading}\r\n                        value={description}\r\n                        onChange={(e: any) => setDescription(e.target.value)}\r\n                        maxLength={100}\r\n                        placeholder=\"Descrição\"\r\n                    />\r\n                </InputDiv>\r\n            </InputContainer>\r\n            <InputContainer>\r\n                <InputTitle>Coloque palavras-chaves</InputTitle>\r\n                <InputDiv>\r\n                    <Key\r\n                        size={20}\r\n                        color=\"#d9dadc\"\r\n                    />\r\n                    <TextArea\r\n                        disabled={loading}\r\n                        value={keywords}\r\n                        onChange={(e: any) => setKeywords(e.target.value)}\r\n                        maxLength={400}\r\n                        placeholder=\"Palavras-chaves\"\r\n                    />\r\n                </InputDiv>\r\n            </InputContainer>\r\n            <RadioContainer>\r\n                {musicTypes.map(musicType => <RadioItem key={musicType.value}>\r\n                    <RadioInput\r\n                        type=\"radio\"\r\n                        name=\"music-type\"\r\n                        onChange={() => setType(musicType.value)}\r\n                        value={musicType.value}\r\n                    />\r\n                    <RadioInputDiv\r\n                        style={{\r\n                            backgroundColor: type === musicType.value ? '#4c43df' : '#d9dadc'\r\n                        }}\r\n                    />\r\n                    <p\r\n                        style={{\r\n                            color: type === musicType.value ? '#4c43df' : '#d9dadc'\r\n                        }}\r\n                    >{musicType.label}</p>\r\n                </RadioItem>)}\r\n            </RadioContainer>\r\n            <label>\r\n                <ButtonInput\r\n                    disabled={loading}\r\n                    onChange={handleGetImage}\r\n                    ref={imageInput}\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                />\r\n                <Button>\r\n                    {image.uri ?\r\n                        <ButtonImg src={image.uri}\r\n                        /> :\r\n                        'Selecione uma foto de fundo para a música'\r\n                    }\r\n                </Button>\r\n            </label>\r\n            <label>\r\n                <ButtonInput\r\n                    disabled={loading}\r\n                    onChange={handleGetAudio}\r\n                    ref={audioInput}\r\n                    type=\"file\"\r\n                    accept=\"audio/*\"\r\n                />\r\n                <Button>\r\n                    {audio.name ?\r\n                    audio.name\r\n                    : <Plus\r\n                        size={20}\r\n                        color=\"#d9dadc\"\r\n                    />}\r\n                </Button>\r\n            </label>\r\n            {error ? <ErrorContainer>\r\n                <ErrorMessage>{errorMessage}</ErrorMessage>\r\n            </ErrorContainer> : null}\r\n            {success ? <SuccessContainer>\r\n                <SuccessMessage>Música enviada com sucesso</SuccessMessage>\r\n            </SuccessContainer> : null}\r\n            <Divider\r\n                customWidth=\"320px\"\r\n            />\r\n            <SaveButton disabled={loading} onClick={handleSendMusic}>\r\n                <SaveButtonText>Enviar música</SaveButtonText>\r\n            </SaveButton>\r\n        </Main>\r\n    </Container>\r\n}\r\n\r\nexport default Upload","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport api from '../../services/api'\r\nimport url from '../../services/url'\r\n\r\ninterface PublicUser {\r\n    name: string\r\n    avatar: string\r\n    playlists: Array<{\r\n        name: string\r\n        public: boolean\r\n        id: number\r\n        musics: Array<{\r\n            music_background: string\r\n            name: string\r\n            id: number\r\n        }>\r\n    }>\r\n    id: number\r\n    friends: Array<{\r\n        name: string\r\n        avatar: string\r\n        id: number\r\n    }>\r\n    musics: Array<{\r\n        id: number\r\n        name: string\r\n        music_background: string\r\n    }>\r\n    online: boolean\r\n    type?: string\r\n    addable: boolean\r\n    createdAt: string\r\n}\r\n\r\nconst initialState: PublicUser = {\r\n    addable: false,\r\n    avatar: '',\r\n    friends: [],\r\n    id: 0,\r\n    name: '',\r\n    online: false,\r\n    playlists: [],\r\n    musics: [],\r\n    createdAt: ''\r\n}\r\n\r\nfunction treatTime(time: number): string {\r\n    return time > 9 ? `${time}` : `0${time}`\r\n}\r\n\r\nfunction treatDate(time: string): string {\r\n    const date = new Date(time)\r\n\r\n    const hours = treatTime(date.getHours())\r\n    const minutes = treatTime(date.getMinutes())\r\n\r\n    const day = treatTime(date.getDate())\r\n    const month = treatTime(date.getMonth())\r\n    const year = treatTime(date.getFullYear())\r\n\r\n    return `${hours}:${minutes} - ${day}/${month}/${year}`\r\n}\r\n\r\nfunction User(): JSX.Element {\r\n    const email = localStorage.getItem('email')\r\n    const token = localStorage.getItem('token')\r\n\r\n    const { id } = useParams() as any\r\n\r\n    const [user, setUser] = useState<PublicUser>(initialState)\r\n\r\n    useEffect(() => {\r\n        async function run() {\r\n            try {\r\n                const { data } = await api.get(`/user/${id}`, {\r\n                    headers: {\r\n                        email,\r\n                        token\r\n                    }\r\n                })\r\n                if (data.error) {\r\n                    alert(data.message)\r\n                } else {\r\n                    setUser(data)\r\n                }\r\n            } catch(err) {\r\n                alert('Um erro ocorreu')\r\n            }\r\n        }\r\n        if (id) {\r\n            run()\r\n        }\r\n    }, [id])\r\n\r\n    return <div/>\r\n}\r\n\r\nexport default User","import styled from 'styled-components'\r\n\r\nexport const Container: any = styled.div`\r\n    width: ${(props: any) => props.inserted ? '100%' : '100vw'};\r\n    height: ${(props: any) => props.inserted ? '100%' : '100vh'};\r\n    background-color: #e3e3e3;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const Title = styled.h1`\r\n    font-size: 22px;\r\n    color: #4c43df;\r\n`\r\n\r\nexport const Button = styled.button`\r\n    border: 1px solid #4c43df;\r\n    border-radius: 10px;\r\n    padding: 9px 14px;\r\n\r\n    color: #4c43df;\r\n\r\n    transition: all .2s linear;\r\n\r\n    &:hover {\r\n        color: #e3e3e3;\r\n        background-color: #4c43df;\r\n        border: 0;\r\n    }\r\n`","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport {\r\n    Container,\r\n    Title,\r\n    Button\r\n} from './styles'\r\n\r\nimport logo from '../../images/logo.png'\r\n\r\ninterface NotFoundInterface {\r\n    inserted?: boolean\r\n}\r\n\r\nfunction NotFound(props: NotFoundInterface): JSX.Element {\r\n    const history = useHistory()\r\n\r\n    function goBack() {\r\n        history.goBack()\r\n    }\r\n\r\n    return <Container inserted={props.inserted}>\r\n        <img src={logo} style={{ width: 200, height: 200 }} />\r\n        <Title>Página inexistente</Title>\r\n        <Button onClick={goBack}>\r\n            <p>Clique aqui para voltar</p>\r\n        </Button>\r\n    </Container>\r\n}\r\n\r\nexport default NotFound","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const AppContainer = styled.div`\r\n    flex: 1;\r\n    \r\n    display: flex;\r\n`\r\nexport const AppSelector = styled.div`\r\n    width: 4%;\r\n    height: 100%;\r\n    background-image: linear-gradient(to bottom, #4c43df, #d9dadc);\r\n\r\n    box-sizing: border-box;\r\n    padding: 10px 0;\r\n`\r\n\r\nexport const AppSelectorButton = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    width: 100%;\r\n    padding: 2px 0;\r\n\r\n    margin-bottom: 5px;\r\n`\r\n\r\nexport const NavContainer = styled.nav`\r\n    width: 20%;\r\n    height: 100%;\r\n    background-color: #2f3136;\r\n\r\n    border-right: 1px solid #d9dadc;\r\n\r\n    box-sizing: border-box;\r\n    padding: 0 10px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const NavButtonContainer = styled.div`\r\n    flex: 1;\r\n    overflow: auto;\r\n`\r\n\r\nexport const NavButton = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    margin: 10px 0;\r\n\r\n    & > svg {\r\n        transition: stroke .2s linear;\r\n    }\r\n`\r\n\r\nexport const NavButtonText: any = styled.p`\r\n    color: ${(props: any) => props.selected ? '#4c43df' : '#d9dadc'};\r\n    margin-left: 10px;\r\n\r\n    transition: color .2s linear;\r\n`\r\n\r\nexport const NavSubtitleContainer = styled.div`\r\n    width: 100%;\r\n    height: 20px;\r\n    \r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\n\r\nexport const NavSubtitle = styled.p`\r\n    color: #d9dadc;\r\n`\r\n\r\nexport const NavPlaylistContainer = styled.div`\r\n    width: 100%;\r\n    height: 250px;\r\n    overflow: auto;\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        width: 4px;\r\n        height: 5px;\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #3e3e3e;\r\n        border-radius: 10px;\r\n    }\r\n`\r\n\r\nexport const NavPlaylistItem = styled.button`\r\n    width: 100%;\r\n    height: 30px;\r\n    \r\n    margin: 5px 0;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nexport const NavPlaylistImage = styled.img`\r\n    width: 50px;\r\n    height: 100%;\r\n    border-radius: 5px;\r\n`\r\n\r\nexport const NavPlaylistImageDiv = styled.div`\r\n    width: 50px;\r\n    height: 100%;\r\n`\r\n\r\nexport const NavPlaylistInfoContainer = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    margin-left: 10px;\r\n`\r\n\r\nexport const NavPlaylistInput = styled.input`\r\n    color: #d9dadc;\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n\r\n    width: 80%;\r\n    border: 1px solid #d9d9d9;\r\n    border-radius: 10px;\r\n    padding: 0 5px;\r\n`\r\n\r\nexport const NavPlaylistName = styled.strong`\r\n    color: #d9dadc;\r\n    text-align: left;\r\n`\r\n\r\nexport const NavPlaylistInfo = styled.span`\r\n    color: #d9dadc;\r\n    text-align: left;\r\n`\r\n\r\nexport const DownloadButton = styled.a`\r\n    width: 100%;\r\n    height: 20px;\r\n    color: #d9dadc;\r\n\r\n    text-align: center;\r\n    text-decoration: none;\r\n\r\n    margin-bottom: 10px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    & > span {\r\n        margin-left: 5px;\r\n    }\r\n`\r\n\r\nexport const ContentContainer = styled.div`\r\n    width: 78%;\r\n    height: 100%;\r\n`\r\n\r\nexport const NoFriendContainer = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n`\r\n\r\nexport const NoFriendImage = styled.img`\r\n    width: 80px;\r\n    height: 80px;\r\n    border-radius: 40px;\r\n\r\n    margin-bottom: 10px;\r\n`\r\n\r\nexport const NoFriendText = styled.h3`\r\n    color: #d9dadc;\r\n`\r\n\r\nexport const FriendsContainer = styled.button`\r\n    width: 100%;\r\n    height: 40px;\r\n\r\n    margin-top: 10px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: row;\r\n`\r\n\r\nexport const FriendsButtonContainer: any = styled.div`\r\n    margin-top: 10px;\r\n\r\n    width: 100%;\r\n    height: ${(props: any) => props.loaded ? '420px' : '520px'};\r\n\r\n    overflow: auto;\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        width: 4px;\r\n        height: 5px;\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #3e3e3e;\r\n        border-radius: 10px;\r\n    }\r\n`\r\n\r\nexport const FriendButton: any = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    width: 100%;\r\n    height: 45px;\r\n    border-radius: 7px;\r\n    box-sizing: border-box;\r\n    padding: 2.5px;\r\n\r\n    margin: 10px 0;\r\n\r\n    ${(props: any) => props.selected ? 'background-color: rgba(255, 255, 255, 0.2);' : ''}\r\n\r\n    & > svg {\r\n        transition: stroke .2s linear;\r\n    }\r\n`\r\n\r\nexport const FriendAvatarContainer = styled.div`\r\n    width: 40px;\r\n    height: 40px;\r\n`\r\n\r\nexport const FriendAvatarImage = styled.img`\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 20px;\r\n`\r\n\r\nexport const FriendStatusContainer = styled.div`\r\n    width: 17px;\r\n    height: 17px;\r\n    border-radius: 8.5px;\r\n    background-color: #2f3136;\r\n\r\n    position: relative;\r\n    left: 25px;\r\n    bottom: 17px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const FriendStatus: any = styled.div`\r\n    width: 9px;\r\n    height: 9px;\r\n    border-radius: 4.5px;\r\n\r\n    background-color: ${(props: any) => props.online ? '#28a745' : 'rgba(255, 255, 255, 0.2)'};\r\n`\r\n\r\nexport const FriendNameContainer = styled.div`\r\n    width: 80%;\r\n    height: 100%;\r\n\r\n    box-sizing: border-box;\r\n    padding: 0 5px;\r\n\r\n    overflow: auto;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        width: 4px;\r\n        height: 5px;\r\n        background-color: #d9dadc;\r\n\r\n        border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #3e3e3e;\r\n        border-radius: 10px;\r\n    }\r\n`\r\n\r\nexport const FriendNameText = styled.p`\r\n    color: #d9dadc;\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n`\r\n\r\nexport const FriendMessageText: any = styled.p`\r\n    color: #d9dadc;\r\n    font-size: 15px;\r\n    ${(props: any) => props.new ? 'font-weight: bold;' : ''}\r\n`\r\n\r\nexport const Divider = styled.div`\r\n    width: 100%;\r\n    height: 1.5px;\r\n    background-color: #d9dadc;\r\n\r\n    margin: 5px 0;\r\n`\r\n\r\nexport const Text = styled.p`\r\n    color: #d9dadc;\r\n    font-size: 18px;\r\n`","import React, { useState, useEffect, useRef, Fragment } from 'react'\r\nimport { Switch, Route, useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n    Edit,\r\n    Globe,\r\n    Lock,\r\n    Home,\r\n    MessageCircle,\r\n    Search,\r\n    Upload,\r\n    Music,\r\n    User as UserIcon,\r\n    Trash2,\r\n    Download,\r\n    PlusCircle,\r\n    Smartphone\r\n} from 'react-feather'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport io, { Socket } from 'socket.io-client'\r\n\r\nimport AudioController from '../../components/AudioController'\r\nimport Header from '../../components/Header'\r\nimport {\r\n    ContextMenuContainer,\r\n    ContextMenuItem,\r\n    ContextMenuTextContainer,\r\n    ContextMenuDivider,\r\n    ContextMenuText\r\n} from '../../components/ContextMenu'\r\n\r\nimport Chat from '../Chat'\r\nimport Genre from '../Genre'\r\nimport HomePage from '../Home'\r\nimport MusicPage from '../Music'\r\nimport MyMusics from '../MyMusics'\r\nimport Playlist from '../Playlist'\r\nimport SearchPage from '../Search'\r\nimport Me from '../Me'\r\nimport UploadPage from '../Upload'\r\nimport User from '../User'\r\nimport NotFound from '../NotFound'\r\n\r\nimport {\r\n    Container,\r\n    AppContainer,\r\n    AppSelector,\r\n    AppSelectorButton,\r\n    NavContainer,\r\n    NavButtonContainer,\r\n    NavButton,\r\n    NavButtonText,\r\n    NavSubtitleContainer,\r\n    NavSubtitle,\r\n    NavPlaylistContainer,\r\n    NavPlaylistItem,\r\n    NavPlaylistImage,\r\n    NavPlaylistImageDiv,\r\n    NavPlaylistInfoContainer,\r\n    NavPlaylistInput,\r\n    NavPlaylistName,\r\n    NavPlaylistInfo,\r\n    DownloadButton,\r\n    ContentContainer,\r\n    NoFriendContainer,\r\n    NoFriendImage,\r\n    NoFriendText,\r\n    FriendsContainer,\r\n    FriendsButtonContainer,\r\n    FriendButton,\r\n    FriendAvatarContainer,\r\n    FriendAvatarImage,\r\n    FriendStatusContainer,\r\n    FriendStatus,\r\n    FriendNameContainer,\r\n    FriendNameText,\r\n    FriendMessageText,\r\n    Divider,\r\n    Text\r\n} from './styles'\r\n\r\nimport api from '../../services/api'\r\nimport url from '../../services/url'\r\n\r\nimport logo from '../../images/logo.png'\r\n\r\ninterface AppSelector {\r\n    mode: 'conversation' | 'music'\r\n    path: string\r\n}\r\n\r\ninterface UserMessage {\r\n    name: string\r\n    avatar: string\r\n    id: number\r\n    online: boolean\r\n    type: string\r\n}\r\n\r\ninterface Message {\r\n    date: string\r\n    from: number\r\n    content: string\r\n    seen: boolean\r\n    id: number\r\n}\r\n\r\ninterface Friendship {\r\n    id: number\r\n    from: UserMessage\r\n    to: UserMessage\r\n    accepted: boolean\r\n    messages: Array<Message>\r\n}\r\n\r\ninterface MessagesNotSeen {\r\n    [index: number]: Array<Message>\r\n}\r\n\r\ninterface UserConfig {\r\n    notifications: boolean\r\n    id: number\r\n}\r\n\r\ninterface UsersConfig {\r\n    [index: number]: UserConfig\r\n}\r\n\r\nconst initialState: UserMessage = {\r\n    name: '',\r\n    avatar: '',\r\n    id: 0,\r\n    online: true,\r\n    type: 'computer'\r\n}\r\n\r\nconst initialStateFriendship: Friendship = {\r\n    accepted: true,\r\n    from: {\r\n        avatar: '',\r\n        id: 0,\r\n        name: '',\r\n        online: true,\r\n        type: 'android'\r\n    },\r\n    id: 0,\r\n    messages: [],\r\n    to: {\r\n        avatar: '',\r\n        id: 0,\r\n        name: '',\r\n        online: true,\r\n        type: 'android'\r\n    }\r\n}\r\n\r\nfunction App(): JSX.Element {\r\n\r\n    const email = localStorage.getItem('email')\r\n    const token = localStorage.getItem('token')\r\n\r\n    const { desktop } = window as any\r\n\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    \r\n    const dispatch = useDispatch()\r\n    const musicIsLoaded = useSelector((store: any) => store.musicIsLoaded)\r\n    const updates = useSelector((store: any) => store.updates)\r\n    const playlistsStore: Array<Playlist> = useSelector((store: any) => store.playlists)\r\n\r\n    const [contextMenu, setContextMenu] = useState<boolean>(false)\r\n    const [contextMenuCoordinates, setContextMenuCoordinates] = useState<CustomCoordinates>()\r\n\r\n    const nameInput = useRef<any>()\r\n    const [initialName, setInitialName] = useState<string>('')\r\n    const [playlistName, setPlaylistName] = useState<string>('')\r\n    const [indexSelected, setIndexSelected] = useState<number>(0)\r\n\r\n    const [playlists, setPlaylists] = useState<Array<Playlist>>([])\r\n\r\n    const createPlaylistInput = useRef<any>()\r\n    const [createPlaylist, setCreatePlaylist] = useState<boolean>(false)\r\n    const [createPlaylistName, setCreatePlaylistName] = useState<string>('')\r\n\r\n    const [socket, setSocket] = useState<typeof Socket>()\r\n\r\n    const [me, setMe] = useState<UserMessage>(initialState)\r\n    const [friendships, setFriendships] = useState<Array<Friendship>>([])\r\n    const [myRequests, setMyRequests] = useState<Array<Friendship>>([])\r\n    const [friendsRequests, setFriendsRequests] = useState<Array<Friendship>>([])\r\n    const [messagesNotSeen, setMessagesNotSeen] = useState<MessagesNotSeen>({})\r\n    const [openedChat, setOpenedChat] = useState<boolean>(false)\r\n    const [openedChatFriendship, setOpenedChatFriendship] = useState<Friendship>(initialStateFriendship)\r\n\r\n    const [appSelection, setAppSelection] = useState<AppSelector>({\r\n        mode: 'music',\r\n        path: ''\r\n    })\r\n\r\n    const path = location.pathname.replace('/app', '')\r\n\r\n    function selectApp(newMode: string): Function {\r\n        return function(): void {\r\n            if (appSelection.mode === newMode) {\r\n                return\r\n            }\r\n            const { pathname } = location\r\n            switch (newMode) {\r\n                case 'music':\r\n                    if (appSelection.path === '') {\r\n                        history.push('/app')\r\n                    } else {\r\n                        history.push(appSelection.path)\r\n                    }\r\n                    setAppSelection({\r\n                        mode: 'music',\r\n                        path: pathname\r\n                    })\r\n                    break\r\n                case 'conversation':\r\n                    if (appSelection.path === '') {\r\n                        history.push('/app/friendship')\r\n                    } else {\r\n                        history.push(appSelection.path)\r\n                    }\r\n                    setAppSelection({\r\n                        mode: 'conversation',\r\n                        path: pathname\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    function navigate(pageName: string): Function {\r\n        return function(): void {\r\n            if (pageName === '') {\r\n                history.push('/app')\r\n            } else {\r\n                history.push(`/app/${pageName}`)\r\n            }\r\n        }\r\n    }\r\n\r\n    function renamePlaylist(index: number): Function {\r\n        return async function() {\r\n            function clean(newName?: string) {\r\n                dispatch({ type: 'rename-playlists', index, payload: newName })\r\n            }\r\n            if (playlistName !== initialName) {\r\n                try {\r\n                    const { data } = await api.patch('/playlists/rename', {\r\n                        name: playlists[index].name,\r\n                        newName: playlistName\r\n                    }, {\r\n                        headers: {\r\n                            email,\r\n                            token\r\n                        }\r\n                    })\r\n                    if (data.error) {\r\n                        alert(data.message)\r\n                    } else {\r\n                        clean(playlistName)\r\n                        setPlaylistName('')\r\n                        setInitialName('')\r\n                    }\r\n                } catch(err) {\r\n                    alert('Um erro ocorreu ao renomear a playlist')\r\n                }\r\n            } else {\r\n                clean()\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleGoPlaylist(playlist: Playlist, index: number): Function {\r\n        return function() {\r\n            dispatch({ type: 'change-actual-index', payload: index })\r\n            history.push(`/app/playlist/${playlist.id}`)\r\n        }\r\n    }\r\n\r\n    function handleContextMenuPlaylist(index: number): Function {\r\n        return function() {\r\n            setIndexSelected(index)\r\n            setContextMenu(true)\r\n        }\r\n    }\r\n\r\n    function handleRenamePlaylist() {\r\n        const newPlaylists: Array<Playlist> = [...playlists]\r\n        newPlaylists[indexSelected].editable = true\r\n        setInitialName(newPlaylists[indexSelected].name)\r\n        setPlaylistName(newPlaylists[indexSelected].name)\r\n        setPlaylists(newPlaylists)\r\n        setTimeout(() => {\r\n            nameInput.current.focus()\r\n        }, 1)\r\n    }\r\n\r\n    async function handleTogglePublic() {\r\n        try {\r\n            const { data } = await api.patch('/playlists/change-public', {\r\n                public_playlist: !playlists[indexSelected].public,\r\n                name: playlists[indexSelected].name\r\n            }, {\r\n                headers: {\r\n                    email,\r\n                    token\r\n                }\r\n            })\r\n            if (data.error) {\r\n                alert(data.message)\r\n            } else {\r\n                dispatch({ type: 'toggle-public-playlists', index: indexSelected })\r\n            }\r\n        } catch(err) {\r\n            alert('Um erro ocorreu.')\r\n        }\r\n    }\r\n\r\n    async function handleDeletePlaylist() {\r\n        try {\r\n            const { data } = await api.delete('/playlists', {\r\n                headers: {\r\n                    email,\r\n                    token,\r\n                    name: playlists[indexSelected].name\r\n                }\r\n            })\r\n            if (data.error) {\r\n                alert(data.message)\r\n            } else {\r\n                dispatch({ type: 'delete-playlists', index: indexSelected })\r\n            }\r\n        } catch(err) {\r\n            alert('Um erro ocorreu ao deletar a playlist')\r\n        }\r\n    }\r\n\r\n    async function handleCreatePlaylist() {\r\n        try {\r\n            if (createPlaylistName) {\r\n                const { data } = await api.post('/playlists', {\r\n                    name: createPlaylistName,\r\n                    public_playlist: false\r\n                }, {\r\n                    headers: {\r\n                        email,\r\n                        token\r\n                    }\r\n                })\r\n                if (data.error) {\r\n                    alert(data.message)\r\n                } else {\r\n                    dispatch({ type: 'insert-new-playlists', payload: createPlaylistName, id: data.id })\r\n\r\n                    setCreatePlaylist(false)\r\n                    setCreatePlaylistName('')\r\n                }\r\n            } else {\r\n                setCreatePlaylist(false)\r\n                setCreatePlaylistName('')\r\n            }\r\n        } catch(err) {\r\n            alert('Não foi possível criar a playlist')\r\n        }\r\n    }\r\n\r\n    function handleOpenFriendship() {\r\n        setOpenedChat(false)\r\n    }\r\n\r\n    function handleOpenChat(friendship: Friendship){\r\n        setOpenedChat(true)\r\n        setOpenedChatFriendship(friendship)\r\n\r\n        const index = friendships.findIndex(myFriendship => myFriendship.id === friendship.id)\r\n        const newFriendships = [...friendships]\r\n\r\n        const newUnseenMessages = {...messagesNotSeen}\r\n        newFriendships[index].messages.map(async (message, messageIndex) => {\r\n            if (!message.seen) {\r\n                try {\r\n                    const { data } = await api.get(`/friends/message/see/${friendship.id}/${message.id}`, {\r\n                        headers: {\r\n                            email,\r\n                            token\r\n                        }\r\n                    })\r\n                    if (data.error) {\r\n                        alert(data.message)\r\n                    } else {\r\n                        newFriendships[index].messages[messageIndex].seen = true\r\n\r\n                        const unseenMessageIndex = messagesNotSeen[friendship.id * 1].indexOf(message)\r\n                        newUnseenMessages[friendship.id * 1].splice(unseenMessageIndex, 1)\r\n                    }\r\n                } catch(err) {\r\n                    alert('Um erro ocorreu ao vistar a mensagem')\r\n                }\r\n            }\r\n        })\r\n\r\n        setFriendships(newFriendships)\r\n        setMessagesNotSeen(newUnseenMessages)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (path.startsWith('/friendship')) {\r\n            const newAppSelection = {...appSelection}\r\n            newAppSelection.mode = 'conversation'\r\n            setAppSelection(newAppSelection)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!email || !token) {\r\n            sessionStorage.setItem('url', location.pathname)\r\n            history.push('/')\r\n            return\r\n        }\r\n        async function run() {\r\n            try {\r\n                const { data } = await api.get('/playlists', {\r\n                    headers: {\r\n                        email,\r\n                        token\r\n                    }\r\n                })\r\n                const newPlaylists = []\r\n                for (let playlist of data) {\r\n                    newPlaylists.push({\r\n                        ...playlist,\r\n                        editable: false\r\n                    })\r\n                }\r\n                setPlaylists(newPlaylists)\r\n\r\n                dispatch({ type: 'change-playlists', payload: data })\r\n            } catch(err) {\r\n                alert('Um erro ocorreu ao carregar suas playlists.')\r\n            }\r\n        }\r\n        run()\r\n    }, [updates])\r\n\r\n    useEffect(() => {\r\n        function newMyRequest(friendship: Friendship) {\r\n            setMyRequests([...myRequests, friendship])\r\n        }\r\n        function newFriendRequest(friendship: Friendship) {\r\n            setFriendsRequests([...friendsRequests, friendship])\r\n        }\r\n        function friendAccepted(friendship: Friendship) {\r\n            const newMessagesNotSeen = {...messagesNotSeen}\r\n            newMessagesNotSeen[friendship.id * 1] = []\r\n            setMessagesNotSeen(newMessagesNotSeen)\r\n\r\n            setFriendships([...friendships, friendship])\r\n        }\r\n        function message(message: Message, id: number) {\r\n            async function run() {\r\n                try {\r\n                    const index = friendships.findIndex(friendship => friendship.id === id * 1)\r\n                    const newFriendships = [...friendships]\r\n                    if (openedChatFriendship?.id == id && message.from !== me.id) {\r\n                        await api.get(`/friends/message/see/${id}/${message.id}`, {\r\n                            headers: {\r\n                                email,\r\n                                token\r\n                            }\r\n                        })\r\n                        newFriendships[index].messages.push({...message, seen: true})\r\n                    } else if (message.from !== me.id) {\r\n                        newFriendships[index].messages.push(message)\r\n    \r\n                        const newUnseenMessages = {...messagesNotSeen}\r\n                        newUnseenMessages[id * 1].push(message)\r\n                        setMessagesNotSeen(newUnseenMessages)\r\n    \r\n                        let name: string\r\n                        if (message.from === friendships[index].from.id) {\r\n                            name = friendships[index].from.name\r\n                        } else {\r\n                            name = friendships[index].to.name\r\n                        }\r\n                        const usersConfigJSON = localStorage.getItem('users-config')\r\n                        let usersConfig: UsersConfig = {}\r\n                        usersConfig[message.from] = {\r\n                            id: message.from,\r\n                            notifications: true\r\n                        }\r\n                        if (usersConfigJSON) {\r\n                            usersConfig = JSON.parse(usersConfigJSON)\r\n                        }\r\n                        if (usersConfig[message.from]) {\r\n                            if (usersConfig[message.from].notifications) {\r\n                                // presentNotificationAsync({\r\n                                //     title: 'Nova mensagem!',\r\n                                //     body: `${name}: ${message.content}`,\r\n                                //     data: {\r\n                                //         id,\r\n                                //         messageId: message.id,\r\n                                //         type: 'chat'\r\n                                //     },\r\n                                //     sound: false,\r\n                                //     vibrate: [200]\r\n                                // })\r\n                            }\r\n                        } else {\r\n                            usersConfig[message.from] = {\r\n                                id: message.from,\r\n                                notifications: true\r\n                            }\r\n                            // await AsyncStorage.setItem('users-config', JSON.stringify(usersConfig))\r\n                            // presentNotificationAsync({\r\n                            //     title: 'Nova mensagem!',\r\n                            //     body: `${name}: ${message.content}`,\r\n                            //     data: {\r\n                            //         id,\r\n                            //         messageId: message.id,\r\n                            //         type: 'chat'\r\n                            //     },\r\n                            //     sound: false,\r\n                            //     vibrate: [200]\r\n                            // })\r\n                        }\r\n                    } else {\r\n                        newFriendships[index].messages.push(message)\r\n                    }\r\n                    setFriendships(newFriendships)\r\n                } catch(err) {\r\n                    alert('Um erro ocorreu')\r\n                }\r\n            }\r\n            run()\r\n        }\r\n        function messageDeleted(messageId: number, id: number) {\r\n            const newFriendships = [...friendships]\r\n            const friendship = newFriendships.find(friendship => friendship.id == id)\r\n            \r\n            const index = friendship?.messages.findIndex(message => message.id == messageId)\r\n            if (index !== -1 && index !== undefined) {\r\n                friendship?.messages.splice(index, 1)\r\n                setFriendships(newFriendships)\r\n            }\r\n        }\r\n        function newName(id: number, newName:  string) {\r\n            const newFriendships = [...friendships]\r\n\r\n            const index1 = newFriendships.findIndex(friendship => friendship.from.id == id)\r\n            const index2 = newFriendships.findIndex(friendship => friendship.to.id == id)\r\n\r\n            if (index1 !== -1) {\r\n                newFriendships[index1].from.name = newName\r\n            }\r\n            if (index2 !== -1) {\r\n                newFriendships[index2].to.name = newName\r\n            }\r\n\r\n            setFriendships(newFriendships)\r\n        }\r\n        function newAvatar(id: number, avatar: string) {\r\n            const newFriendships = [...friendships]\r\n\r\n            const index1 = newFriendships.findIndex(friendship => friendship.from.id == id)\r\n            const index2 = newFriendships.findIndex(friendship => friendship.to.id == id)\r\n\r\n            if (index1 !== -1) {\r\n                newFriendships[index1].from.avatar = avatar\r\n            }\r\n            if (index2 !== -1) {\r\n                newFriendships[index2].to.name = avatar\r\n            }\r\n\r\n            setFriendships(newFriendships)\r\n        }\r\n        function userConnected(id: number) {\r\n            if (openedChatFriendship?.from.id === id || openedChatFriendship?.to.id === id) {\r\n                const newFriendship = openedChatFriendship\r\n                if (newFriendship.from.id === me.id) {\r\n                    newFriendship.to.online = true\r\n                } else {\r\n                    newFriendship.from.online = true\r\n                }\r\n                setOpenedChatFriendship(newFriendship)\r\n            }\r\n            const newFriendships = [...friendships]\r\n            newFriendships.map(friendship => {\r\n                if (friendship.from.id === id) {\r\n                    friendship.from.online = true\r\n                }\r\n                if (friendship.to.id === id) {\r\n                    friendship.to.online = true\r\n                }\r\n            })\r\n            setFriendships(newFriendships)\r\n        }\r\n        function userDisconnected(id: number) {\r\n            if (openedChatFriendship?.from.id === id || openedChatFriendship?.to.id === id) {\r\n                const newFriendship = openedChatFriendship\r\n                if (newFriendship.from.id === me.id) {\r\n                    newFriendship.to.online = false\r\n                } else {\r\n                    newFriendship.from.online = false\r\n                }\r\n                setOpenedChatFriendship(newFriendship)\r\n            }\r\n            const newFriendships = [...friendships]\r\n            newFriendships.map(friendship => {\r\n                if (friendship.from.id === id) {\r\n                    friendship.from.online = false\r\n                }\r\n                if (friendship.to.id === id) {\r\n                    friendship.to.online = false\r\n                }\r\n            })\r\n            setFriendships(newFriendships)\r\n        }\r\n        function userDeleted(id: number) {\r\n            const newFriendships = [...friendships]\r\n\r\n            const index = newFriendships.findIndex(friendship => (friendship.from.id == id || friendship.to.id == id))\r\n            if (index === -1) {\r\n                const newFriendsRequests = [...friendsRequests]\r\n                const index = newFriendsRequests.findIndex(friendship => friendship.from.id == id)\r\n                if (index === -1) {\r\n                    const newMyRequests = [...myRequests]\r\n                    const index = newMyRequests.findIndex(friendship => friendship.to.id == id)\r\n                    if (index === -1) {\r\n                        return\r\n                    }\r\n                    newMyRequests.splice(index, 1)\r\n                    setMyRequests(newMyRequests)\r\n                }\r\n                newFriendsRequests.splice(index, 1)\r\n                setFriendsRequests(newFriendsRequests)\r\n            }\r\n            if (openedChatFriendship === friendships[index]) {\r\n                setOpenedChat(false)\r\n                setOpenedChatFriendship(initialStateFriendship)\r\n            }\r\n\r\n            newFriendships.splice(index, 1)\r\n            setFriendships(newFriendships)\r\n        }\r\n        function friendDeleted(id: number, type: string) {\r\n            switch (type) {\r\n                case 'friendship':\r\n                    const newFriendships = [...friendships]\r\n                    const index = newFriendships.findIndex(friendship => friendship.id == id)\r\n                    if (index === -1) {\r\n                        return\r\n                    }\r\n                    newFriendships.splice(index, 1)\r\n                    return\r\n                case 'request':\r\n                    const newFriendsRequests = [...friendsRequests]\r\n                    const index2 = newFriendsRequests.findIndex(friendship => friendship.id == id)\r\n                    if (index2 === -1) {\r\n                        return\r\n                    }\r\n                    newFriendsRequests.splice(index2, 1)\r\n                    setFriendsRequests(newFriendsRequests)\r\n                    return\r\n                case 'my-request':\r\n                    const newMyRequests = [...myRequests]\r\n                    const index3 = newMyRequests.findIndex(friendship => friendship.id == id)\r\n                    if (index3 === -1) {\r\n                        return\r\n                    }\r\n                    newMyRequests.splice(index3, 1)\r\n                    setMyRequests(newMyRequests)\r\n                    return\r\n                default:\r\n                    return\r\n            }\r\n        }\r\n\r\n        if (socket) {\r\n            socket.removeAllListeners()\r\n\r\n            setTimeout(() => {\r\n                socket.on('new-my-request', newMyRequest)\r\n                socket.on('new-friend-request', newFriendRequest)\r\n                socket.on('friend-accepted', friendAccepted)\r\n                socket.on('message', message)\r\n                socket.on('message-deleted', messageDeleted)\r\n                socket.on('new-name', newName)\r\n                socket.on('new-avatar', newAvatar)\r\n                socket.on('user-connected', userConnected)\r\n                socket.on('user-disconnected', userDisconnected)\r\n                socket.on('user-deleted', userDeleted)\r\n                socket.on('friend-deleted', friendDeleted)\r\n            }, 1)\r\n        }\r\n    }, [socket,  friendships, myRequests, friendsRequests, openedChatFriendship, messagesNotSeen])\r\n\r\n    useEffect(() => {\r\n        const newPlaylists = []\r\n        for (let playlist of playlistsStore) {\r\n            newPlaylists.push({\r\n                ...playlist,\r\n                editable: false\r\n            })\r\n        }\r\n        setPlaylists(newPlaylists)\r\n    }, [playlistsStore])\r\n\r\n    useEffect(() => {\r\n        function contextMenu(evt: MouseEvent) {\r\n            evt.preventDefault()\r\n            setContextMenuCoordinates({\r\n                x: evt.x,\r\n                y: evt.y - 15\r\n            })\r\n        }\r\n        function click() {\r\n            setContextMenu(false)\r\n            setContextMenuCoordinates({\r\n                x: -500,\r\n                y: -500\r\n            })\r\n        }\r\n        function keyDown(evt: KeyboardEvent) {\r\n            if (evt.code === 'Enter') {\r\n                if (nameInput.current) {\r\n                    nameInput.current.blur()\r\n                }\r\n                if (createPlaylistInput.current) {\r\n                    createPlaylistInput.current.blur()\r\n                }\r\n            }\r\n        }\r\n        document.addEventListener('contextmenu', contextMenu)\r\n        document.addEventListener('click', click)\r\n        document.addEventListener('keydown', keyDown)\r\n\r\n        async function run() {\r\n            try {\r\n                const { data: me } = await api.get('/user', {\r\n                    headers: {\r\n                        email,\r\n                        token\r\n                    }\r\n                })\r\n                if (me.error) {\r\n                    alert(me.message)\r\n                } else {\r\n                    setMe(me)\r\n                }\r\n\r\n                const { data: newMessages } = await api.get('/friends/messages', {\r\n                    headers: {\r\n                        email,\r\n                        token\r\n                    }\r\n                })\r\n\r\n                if (newMessages.error) {\r\n                    alert(newMessages.message)\r\n                } else {\r\n                    setFriendships(newMessages)\r\n                    const newMessagesNotSeen: MessagesNotSeen = {...messagesNotSeen}\r\n                    newMessages.map((friendship: Friendship) => {\r\n                        newMessagesNotSeen[friendship.id * 1] = friendship.messages.filter(message => !message.seen && message.from !== me.id)\r\n                    })\r\n                    setMessagesNotSeen(newMessagesNotSeen)\r\n                }\r\n\r\n                const { data: newFriendsRequests } = await api.get('/friends/requests', {\r\n                    headers: {\r\n                        email,\r\n                        token\r\n                    }\r\n                })\r\n                setFriendsRequests(newFriendsRequests.requests)\r\n                setMyRequests(newFriendsRequests.myRequests)\r\n\r\n                setSocket(io(url, {\r\n                    transportOptions: {\r\n                        polling: {\r\n                            extraHeaders: {\r\n                                email,\r\n                                token,\r\n                                type: 'computer'\r\n                            }\r\n                        }\r\n                    }\r\n                }))\r\n            } catch(err) {\r\n                alert('Um erro ocorreu ao carregar suas amizades.')\r\n            }\r\n        }\r\n\r\n        run()\r\n\r\n        return () => {\r\n            document.removeEventListener('contextmenu', contextMenu)\r\n            document.removeEventListener('click', click)\r\n            document.removeEventListener('keydown', keyDown)\r\n        }\r\n    }, [])\r\n\r\n    return <Container>\r\n        {contextMenu ? <ContextMenuContainer {...contextMenuCoordinates}>\r\n            <ContextMenuItem onClick={handleRenamePlaylist}>\r\n                <ContextMenuTextContainer>\r\n                    <Edit\r\n                        color=\"#d9dadc\"\r\n                        size={16}\r\n                    />\r\n                    <ContextMenuDivider/>\r\n                    <ContextMenuText>Renomear</ContextMenuText>\r\n                </ContextMenuTextContainer>\r\n            </ContextMenuItem>\r\n            <ContextMenuItem onClick={handleTogglePublic}>\r\n                <ContextMenuTextContainer>\r\n                    {playlists[indexSelected].public ?\r\n                        <Lock\r\n                            color=\"#d9dadc\"\r\n                            size={16}\r\n                        /> :\r\n                        <Globe\r\n                            color=\"#d9dadc\"\r\n                            size={16}\r\n                        />}\r\n                    <ContextMenuDivider/>\r\n                    <ContextMenuText>Deixar {playlists[indexSelected].public ? 'privado' : 'público'}</ContextMenuText>\r\n                </ContextMenuTextContainer>\r\n            </ContextMenuItem>\r\n            <ContextMenuItem onClick={handleDeletePlaylist}>\r\n                <ContextMenuTextContainer>\r\n                    <Trash2\r\n                        color=\"#d9dadc\"\r\n                        size={16}\r\n                    />\r\n                    <ContextMenuDivider/>\r\n                    <ContextMenuText>Excluir</ContextMenuText>\r\n                </ContextMenuTextContainer>\r\n            </ContextMenuItem>\r\n        </ContextMenuContainer> : null}\r\n        {desktop ? <Header /> : null}\r\n        <AppContainer>\r\n            <AppSelector>\r\n                <AppSelectorButton\r\n                    style={{\r\n                        backgroundColor: appSelection.mode === 'music' ? 'rgba(255, 255, 255, 0.2)' : 'transparent'\r\n                    }}\r\n                    onClick={selectApp('music') as any}\r\n                >\r\n                    <Music\r\n                        color={appSelection.mode === 'music' ? '#d9dadc' : 'rgba(255, 255, 255, 0.5)'}\r\n                        size={26}\r\n                    />\r\n                </AppSelectorButton>\r\n                <AppSelectorButton\r\n                    style={{\r\n                        backgroundColor: appSelection.mode === 'conversation' ? 'rgba(255, 255, 255, 0.2)' : 'transparent'\r\n                    }}\r\n                    onClick={selectApp('conversation') as any}\r\n                >\r\n                    <MessageCircle\r\n                        color={appSelection.mode === 'conversation' ? '#d9dadc' : 'rgba(255, 255, 255, 0.5)'}\r\n                        size={26}\r\n                    />\r\n                </AppSelectorButton>\r\n            </AppSelector>\r\n            {appSelection.mode === 'music' ? <Fragment>\r\n                <NavContainer>\r\n                    <NavButtonContainer>\r\n                        <NavButton onClick={navigate('') as any}>\r\n                            <Home\r\n                                color={path === '' ? '#4c43df' : '#d9dadc'}\r\n                                size={26}\r\n                            />\r\n                            <NavButtonText selected={path === ''}>\r\n                                Início\r\n                            </NavButtonText>\r\n                        </NavButton>\r\n                        <NavButton onClick={navigate('search') as any}>\r\n                            <Search\r\n                                color={path === '/search' ? '#4c43df' : '#d9dadc'}\r\n                                size={26}\r\n                            />\r\n                            <NavButtonText selected={path === '/search'}>\r\n                                Pesquisar\r\n                            </NavButtonText>\r\n                        </NavButton>\r\n                        <NavButton onClick={navigate('upload') as any}>\r\n                            <Upload\r\n                                color={path === '/upload' ? '#4c43df' : '#d9dadc'}\r\n                                size={26}\r\n                            />\r\n                            <NavButtonText selected={path === '/upload'}>\r\n                                Enviar música\r\n                            </NavButtonText>\r\n                        </NavButton>\r\n                        <NavButton onClick={navigate('my-musics') as any}>\r\n                            <Music\r\n                                color={path === '/my-musics' ? '#4c43df' : '#d9dadc'}\r\n                                size={26}\r\n                            />\r\n                            <NavButtonText selected={path === '/my-musics'}>\r\n                                Minhas músicas\r\n                            </NavButtonText>\r\n                        </NavButton>\r\n                        <NavButton onClick={navigate('me') as any}>\r\n                            <UserIcon\r\n                                color={path === '/me' ? '#4c43df' : '#d9dadc'}\r\n                                size={26}\r\n                            />\r\n                            <NavButtonText selected={path === '/me'}>\r\n                                Usuário\r\n                            </NavButtonText>\r\n                        </NavButton>\r\n                        <NavSubtitleContainer>\r\n                            <NavSubtitle>Minhas playlists</NavSubtitle>\r\n                            <button onClick={() => {\r\n                                setCreatePlaylist(true)\r\n                                setTimeout(() => {\r\n                                    if (createPlaylistInput.current) {\r\n                                        createPlaylistInput.current.focus()\r\n                                    }\r\n                                }, 1)\r\n                                }}>\r\n                                <PlusCircle\r\n                                    size={20}\r\n                                    color=\"#d9dadc\"\r\n                                />\r\n                            </button>\r\n                        </NavSubtitleContainer>\r\n                        <NavPlaylistContainer>\r\n                            {playlists.map((playlist, index) => <NavPlaylistItem\r\n                                onClick={handleGoPlaylist(playlist, index) as any}\r\n                                onMouseDown={handleContextMenuPlaylist(index) as any}\r\n                                key={index}>\r\n                                {playlist.musics[0] ? <NavPlaylistImage\r\n                                    src={url + '/music-bg/' + playlist.musics[0].music_background}\r\n                                /> : <NavPlaylistImageDiv/>}\r\n                                <NavPlaylistInfoContainer>\r\n                                    {playlist.editable ?\r\n                                        <NavPlaylistInput\r\n                                            ref={nameInput}\r\n                                            value={playlistName}\r\n                                            onChange={e => setPlaylistName(e.target.value)}\r\n                                            onBlur={renamePlaylist(index) as any}\r\n                                        /> :\r\n                                        <NavPlaylistName>{playlist.name}</NavPlaylistName>}\r\n                                    <NavPlaylistInfo>{playlist.musics.length} Música{playlist.musics.length > 1 ? 's' : ''}</NavPlaylistInfo>\r\n                                </NavPlaylistInfoContainer>\r\n                                {playlist.public ?\r\n                                    <Globe\r\n                                        size={16}\r\n                                        color=\"#d9dadc\"\r\n                                    /> :\r\n                                    <Lock\r\n                                        size={16}\r\n                                        color=\"#d9dadc\"\r\n                                    />}\r\n                            </NavPlaylistItem>)}\r\n                        </NavPlaylistContainer>\r\n                        {createPlaylist ? <div>\r\n                            <NavPlaylistInput\r\n                                value={createPlaylistName}\r\n                                onChange={e => setCreatePlaylistName(e.target.value)}\r\n                                onBlur={handleCreatePlaylist}\r\n                                ref={createPlaylistInput}\r\n                            />\r\n                        </div> : null}\r\n                    </NavButtonContainer>\r\n                    {/* {!desktop && (navigator.userAgent.toLowerCase().includes('windows')) ? <DownloadButton target=\"_blank\" href={`${url}/download/pc`}>\r\n                        <Download\r\n                            color=\"#d9dadc\"\r\n                            size={20}\r\n                        />\r\n                        <span>Baixar app</span>\r\n                    </DownloadButton> : (!desktop && (navigator.userAgent.toLowerCase().includes('android'))) ? <DownloadButton\r\n                        target=\"_blank\"\r\n                        href={`${url}/download`}\r\n                    >\r\n                        <Download\r\n                            color=\"#d9dadc\"\r\n                            size={20}\r\n                        />\r\n                        <span>Baixar app</span>\r\n                    </DownloadButton> : null} */}\r\n                </NavContainer>\r\n                <ContentContainer>\r\n                    <Switch>\r\n                        <Route exact path=\"/app\" component={HomePage} />\r\n                        <Route path=\"/app/genre/:type\" component={Genre} />\r\n                        <Route path=\"/app/music/:id\" component={MusicPage} />\r\n                        <Route path=\"/app/my-musics\" component={MyMusics} />\r\n                        <Route path=\"/app/playlist/:id\" component={Playlist} />\r\n                        <Route path=\"/app/user/:id\" component={User} />\r\n                        <Route path=\"/app/search\" component={SearchPage} />\r\n                        <Route path=\"/app/upload\" component={UploadPage} />\r\n                        <Route path=\"/app/me\" component={Me} />\r\n                        <Route path=\"/app/\" children={<NotFound inserted />} />\r\n                    </Switch>\r\n                </ContentContainer>\r\n            </Fragment> : null}\r\n            {appSelection.mode === 'conversation' ? <Fragment>\r\n            <NavContainer>\r\n                <FriendsContainer>\r\n                    <UserIcon\r\n                        color=\"#d9dadc\"\r\n                        size={20}\r\n                    />\r\n                    <Text>Amigos</Text>\r\n                </FriendsContainer>\r\n                <Divider/>\r\n                <FriendsButtonContainer loaded={musicIsLoaded}>\r\n                    {friendships.length === 0 ? <NoFriendContainer>\r\n                        <NoFriendImage src={logo} />\r\n                        <NoFriendText>Parece que você não tem amigos, que tal adicioná-los?</NoFriendText>\r\n                    </NoFriendContainer> : null}\r\n                    {friendships.sort((friendship1, friendship2) => {\r\n                        if (!friendship1.messages[0]) {\r\n                            return -1\r\n                        }\r\n                        if (!friendship2.messages[0]) {\r\n                            return 1\r\n                        }\r\n            \r\n                        const time1 = new Date(friendship1.messages[friendship1.messages.length - 1].date).getTime()\r\n                        const time2 = new Date(friendship2.messages[friendship2.messages.length - 1].date).getTime()\r\n            \r\n                        if (time1 > time2) {\r\n                            return -1\r\n                        }\r\n                        if (time1 < time2) {\r\n                            return 1\r\n                        }\r\n                        if (time1 === time2) {\r\n                            return 0\r\n                        }\r\n                        return 0\r\n                    }).map(friendship => {\r\n                        let actualAvatar: any\r\n                        let actualUser: UserMessage\r\n                        let actualMessage: Message | null = null\r\n                        if (friendship.from.id === me.id) {\r\n                            actualUser = friendship.to\r\n                        } else {\r\n                            actualUser = friendship.from\r\n                        }\r\n                        if (actualUser.avatar) {\r\n                            actualAvatar = `${url}/avatar/${actualUser.avatar}`\r\n                        }\r\n                        if (friendship.messages[0]) {\r\n                            actualMessage = friendship.messages[friendship.messages.length - 1]\r\n                        }\r\n\r\n                        return <FriendButton\r\n                            key={friendship.id}\r\n                            onClick={() => handleOpenChat(friendship)}\r\n                        >\r\n                            <FriendAvatarContainer>\r\n                                <FriendAvatarImage\r\n                                    src={actualAvatar ? actualAvatar : logo}\r\n                                />\r\n                                <FriendStatusContainer>\r\n                                    {actualUser.online ? actualUser.type === 'android' ? \r\n                                        <Smartphone\r\n                                            size={10}\r\n                                            color=\"#28a745\"\r\n                                        /> : \r\n                                        <FriendStatus online/> : <FriendStatus/>}\r\n                                </FriendStatusContainer>\r\n                            </FriendAvatarContainer>\r\n                            <FriendNameContainer>\r\n                            <FriendNameText>{actualUser.name}</FriendNameText>\r\n                            <FriendMessageText>{actualMessage ? actualMessage.content : null}</FriendMessageText>\r\n                        </FriendNameContainer>\r\n                        </FriendButton>\r\n                    })}\r\n                </FriendsButtonContainer>\r\n            </NavContainer>\r\n            <ContentContainer>\r\n                {openedChat ? <Chat friendship={openedChatFriendship} me={me} /> : <div/>}\r\n            </ContentContainer>\r\n            </Fragment> : null}\r\n            </AppContainer>\r\n        {musicIsLoaded ? <AudioController/> : null}\r\n    </Container>\r\n}\r\n\r\nexport default App","import styled from 'styled-components'\r\n\r\nexport const LoadingContainer = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    background-color: #e6e6e6;\r\n`\r\n\r\nexport const LoadingImage = styled.img`\r\n    width: 200px;\r\n    height: 200px;\r\n`\r\n\r\nexport const Container = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    background-color: #e6e6e6;\r\n`\r\n\r\nexport const Logo = styled.img`\r\n    margin: 10px 0;\r\n    width: 100px;\r\n    height: 100px;\r\n`\r\n\r\nexport const Interface = styled.div`\r\n    width: 30%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`\r\n\r\nexport const InputLabel = styled.p`\r\n    font-size: 20px;\r\n`\r\n\r\nexport const InputContainer = styled.div`\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const TextInput = styled.input`\r\n    width: 75%;\r\n    padding: 10px;\r\n    margin-left: 10px;\r\n\r\n    border: 1px solid #d9dadc;\r\n    background-color: #fff;\r\n`\r\n\r\nexport const LoginContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    width: 30%;\r\n`\r\n\r\nexport const CheckboxLabel = styled.label`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    cursor: pointer;\r\n`\r\n\r\nexport const CheckboxP = styled.p`\r\n    font-size: 18px;\r\n    margin-left: 5px;\r\n`\r\n\r\nexport const LoginButton: any = styled.button`\r\n    padding: 10px 25px;\r\n    background-color: #4c43df;\r\n    border-radius: 10px;\r\n\r\n    opacity: ${(props: any) => props.disabled ? 0.7 : 1};\r\n\r\n    transition: background-color linear .2s;\r\n\r\n    &:hover {\r\n        background-color: ${(props: any) => props.disabled ? '#4c43df' : '#2c23bf'};\r\n    }\r\n    &:active {\r\n        background-color: ${(props: any) => props.disabled ? '#4c43df' : '#09039e'};\r\n    }\r\n`\r\n\r\nexport const LoginText = styled.p`\r\n    font-size: 20px;\r\n    color: #fff;\r\n`\r\n\r\nexport const ErrorContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    border: 1px solid #c82333;\r\n    border-radius: 10px;\r\n\r\n    padding: 10px;\r\n    margin-bottom: 5px;\r\n`\r\n\r\nexport const ErrorMessage = styled.p`\r\n    color: #c82333;\r\n    font-size: 17px;\r\n\r\n    margin-left: 10px;\r\n`\r\n\r\nexport const CreateAccountButton = styled.button`\r\n    border: 1px solid #3e3e3e;\r\n    border-radius: 10px;\r\n    background-color: #fff;\r\n\r\n    padding: 10px 25px;\r\n\r\n    transition: opacity linear .2s;\r\n\r\n    &:hover {\r\n        opacity: 0.7;\r\n    }\r\n\r\n    &:active {\r\n        opacity: 0.3;\r\n    }\r\n`","import styled from 'styled-components'\r\n\r\nexport const CheckboxInput = styled.input`\r\n    width: 0;\r\n    height: 0;\r\n    background-color: transparent;\r\n    display: none;\r\n`\r\n\r\nexport const UncheckedDiv = styled.div`\r\n    width: 13px;\r\n    height: 13px;\r\n    background-color: #d9dadc;\r\n\r\n    border: 1px solid #4c43df;\r\n    border-radius: 5px;\r\n`\r\n\r\nexport const CheckedDiv: any = styled.div`\r\n    width: 16px;\r\n    height: 16px;\r\n    background-color: #4c43df;\r\n\r\n    border-radius: 5px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    box-sizing: border-box;\r\n    padding: 0.5px;\r\n\r\n    &:hover {\r\n        background-color: ${(props: any) => props.disabled ? '#4c43df' : '#2c23bf'};\r\n    }\r\n    &:active {\r\n        background-color: ${(props: any) => props.disabled ? '#4c43df' : '#09039e'};\r\n    }\r\n`","import React, { Fragment } from 'react'\r\nimport {\r\n    Check\r\n} from 'react-feather'\r\n\r\nimport {\r\n    CheckboxInput,\r\n    CheckedDiv,\r\n    UncheckedDiv\r\n} from './styles'\r\n\r\ninterface CheckboxInterface {\r\n    checked: boolean\r\n    setChecked: Function\r\n    disabled?: boolean\r\n}\r\n\r\nfunction Checkbox(props: CheckboxInterface): JSX.Element {\r\n    return <Fragment>\r\n        <CheckboxInput\r\n            type=\"checkbox\"\r\n            checked={props.checked}\r\n            onChange={() => props.setChecked(!props.checked)}\r\n            disabled={props.disabled}\r\n        />\r\n        {props.checked ? <CheckedDiv>\r\n            <Check\r\n                color=\"#d9dadc\"\r\n                size={20}\r\n            />\r\n        </CheckedDiv> : <UncheckedDiv/>}\r\n    </Fragment>\r\n}\r\n\r\nexport default Checkbox","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { User, AtSign, Lock, X } from 'react-feather'\r\n\r\nimport {\r\n    LoadingContainer,\r\n    LoadingImage,\r\n    Container,\r\n    Logo,\r\n    Interface,\r\n    InputLabel,\r\n    InputContainer,\r\n    TextInput,\r\n    LoginContainer,\r\n    CheckboxLabel,\r\n    CheckboxP,\r\n    LoginButton,\r\n    LoginText,\r\n    ErrorContainer,\r\n    ErrorMessage,\r\n    CreateAccountButton\r\n} from './styles'\r\n\r\nimport Checkbox from '../../components/Checkbox'\r\nimport Header from '../../components/Header'\r\nimport Divider from '../../components/Divider'\r\n\r\nimport api from '../../services/api'\r\n\r\nimport logo from '../../images/logo.png'\r\n\r\nfunction Landing(): JSX.Element {\r\n\r\n    const { desktop } = window as any\r\n\r\n    const history = useHistory()\r\n\r\n    const [name, setName] = useState<string>('')\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [confirmPassword, setConfirmPassword] = useState<string>('')\r\n\r\n    const [createAccount, setCreateAccount] = useState<boolean>(false)\r\n    const [rememberMe, setRememberMe] = useState<boolean>(true)\r\n\r\n    const [error, setError] = useState<boolean>(false)\r\n    const [errorMessage, setErrorMessage] = useState<string>('')\r\n\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n\r\n    const [didMount, setDidMount] = useState<boolean>(false)\r\n\r\n    function handleToggleCreateAccount(): void {\r\n        setCreateAccount(!createAccount)\r\n    }\r\n\r\n    async function handleLogin() {\r\n        const url = sessionStorage.getItem('url')\r\n        setLoading(true)\r\n        try {\r\n            if (createAccount) {\r\n                const { data } = await api.post('/user', {\r\n                    name,\r\n                    email,\r\n                    password,\r\n                    confirmPassword\r\n                })\r\n                if (data.error) {\r\n                    setError(true)\r\n                    setErrorMessage(data.message)\r\n                } else {\r\n                    localStorage.setItem('email', email)\r\n                    localStorage.setItem('token', data.token)\r\n                    if (rememberMe) {\r\n                        localStorage.setItem('rememberme', 'true')\r\n                    }\r\n                    history.push(url || '/app')\r\n                }\r\n            } else {\r\n                const { data } = await api.post('/login', {\r\n                    email,\r\n                    password\r\n                })\r\n                if (data.error) {\r\n                    setError(true)\r\n                    setErrorMessage(data.message)\r\n                } else {\r\n                    localStorage.setItem('email', email)\r\n                    localStorage.setItem('token', data.token)\r\n                    if (rememberMe) {\r\n                        localStorage.setItem('rememberme', 'true')\r\n                    }\r\n                    history.push(url || '/app')\r\n                }\r\n            }\r\n        } catch(err) {\r\n            setError(true)\r\n            setErrorMessage('Um erro ocorreu.')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const rememberMe = localStorage.getItem('rememberme')\r\n        if (rememberMe) {\r\n            if (history) {\r\n                history.push('/app')\r\n            }\r\n        } else {\r\n            localStorage.removeItem('email')\r\n            localStorage.removeItem('token')\r\n        }\r\n        setDidMount(true)\r\n    }, [])\r\n\r\n    if (!didMount) {\r\n        return <LoadingContainer>\r\n            <LoadingImage src={logo} />\r\n        </LoadingContainer>\r\n    }\r\n\r\n    return <Container>\r\n        {desktop ? <Header /> : null}\r\n        <Logo\r\n            src={logo}\r\n        />\r\n        <Interface>\r\n            {createAccount ? <>\r\n                <InputLabel>Seu nome</InputLabel>\r\n                <InputContainer>\r\n                    <User\r\n                        size={26}\r\n                        color=\"#4c43df\"\r\n                    />\r\n                    <TextInput\r\n                        placeholder=\"Nome\"\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                    />\r\n                </InputContainer>\r\n            </> : null}\r\n            <InputLabel>Seu e-mail</InputLabel>\r\n            <InputContainer>\r\n                <AtSign\r\n                    size={26}\r\n                    color=\"#4c43df\"\r\n                />\r\n                <TextInput\r\n                    placeholder=\"E-mail\"\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                />\r\n            </InputContainer>\r\n            <InputLabel>Sua senha</InputLabel>\r\n            <InputContainer>\r\n                <Lock\r\n                    size={26}\r\n                    color=\"#4c43df\"\r\n                />\r\n                <TextInput\r\n                    type=\"password\"\r\n                    placeholder=\"Senha\"\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                />\r\n            </InputContainer>\r\n            {createAccount ? <>\r\n                <InputLabel>Confirme sua senha</InputLabel>\r\n                <InputContainer>\r\n                    <Lock\r\n                        size={26}\r\n                        color=\"#4c43df\"\r\n                    />\r\n                    <TextInput\r\n                        type=\"password\"\r\n                        placeholder=\"Confirmar senha\"\r\n                        value={confirmPassword}\r\n                        onChange={e => setConfirmPassword(e.target.value)}\r\n                    />\r\n                </InputContainer>\r\n            </> : null}\r\n            {error ? <ErrorContainer>\r\n                <X\r\n                    size={26}\r\n                    color=\"#c82333\"\r\n                />\r\n                <ErrorMessage>\r\n                    {errorMessage}\r\n                </ErrorMessage>\r\n            </ErrorContainer> : null}\r\n        </Interface>\r\n        <LoginContainer>\r\n                <CheckboxLabel>\r\n                    <Checkbox\r\n                        disabled={loading}\r\n                        checked={rememberMe}\r\n                        setChecked={setRememberMe}\r\n                    />\r\n                    <CheckboxP>Lembrar de mim</CheckboxP>\r\n                </CheckboxLabel>\r\n                <LoginButton\r\n                    disabled={loading}\r\n                    onClick={handleLogin}\r\n                >\r\n                    <LoginText>{createAccount ? 'Criar conta' : 'Logar'}</LoginText>\r\n                </LoginButton>\r\n        </LoginContainer>\r\n        <Divider customWidth=\"30%\" />\r\n        <CreateAccountButton onClick={handleToggleCreateAccount}>\r\n            <p>{createAccount ? 'Entrar em uma conta' : 'Criar conta'}</p>\r\n        </CreateAccountButton>\r\n    </Container>\r\n}\r\n\r\nexport default Landing","import React, { FC } from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\n\r\nimport App from '../pages/App'\r\nimport Landing from '../pages/Landing'\r\nimport NotFound from '../pages/NotFound'\r\n\r\nconst Router: FC = () => <BrowserRouter>\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Landing} />\r\n        <Route path=\"/app\" component={App} />\r\n        <Route path=\"/\" component={NotFound} />\r\n    </Switch>\r\n</BrowserRouter>\r\n\r\nexport default Router","import {} from 'redux'\r\n\r\nconst initialState: number = 0\r\n\r\ninterface Actions {\r\n    type: string\r\n    payload: any\r\n}\r\n\r\nfunction ActualIndexReducer(state: number = initialState, actions: Actions) {\r\n    switch (actions.type) {\r\n        case 'clean-actual-index':\r\n            return initialState\r\n        case 'change-actual-index':\r\n            return actions.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ActualIndexReducer","import {} from 'redux'\r\nimport url from '../../services/url'\r\n\r\nconst initialState = new Audio()\r\n\r\ninterface Actions {\r\n    type: string\r\n    payload?: any\r\n}\r\n\r\nfunction AudioReducer(state: any = initialState, actions: Actions) {\r\n    switch (actions.type) {\r\n        case 'clean-audio':\r\n            state.pause()\r\n            return new Audio()\r\n        case 'source-audio':\r\n            state.src = `${url}/audio/${actions.payload}`\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AudioReducer","import {} from 'redux'\r\n\r\nconst initialState: Music = {\r\n    name: '',\r\n    access: 0,\r\n    description: '',\r\n    keywords: [],\r\n    music_background: '',\r\n    name_upload: '',\r\n    type: '',\r\n    user_owner: {\r\n        avatar: '',\r\n        name: '',\r\n        id: 0\r\n    },\r\n    id: 0,\r\n    createdAt: '',\r\n    editable: false\r\n}\r\n\r\ninterface Actions {\r\n    type: string\r\n    payload?: Music\r\n}\r\n\r\nfunction MusicReducer(state: Music = initialState, actions: Actions): Music {\r\n    switch (actions.type) {\r\n        case 'clean-music':\r\n            return initialState\r\n        case 'change-music':\r\n            if (actions.payload) {\r\n                return actions.payload\r\n            } else {\r\n                return state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default MusicReducer","import {} from 'redux'\r\n\r\nconst initialState: boolean = false\r\n\r\ninterface Actions {\r\n    type: string\r\n}\r\n\r\nfunction MusicIsLoadedReducer(state: boolean = initialState, actions: Actions) {\r\n    switch (actions.type) {\r\n        case 'clean-music-is-loaded':\r\n            return initialState\r\n        case 'active-music-is-loaded':\r\n            return true\r\n        case 'disactive-music-is-loaded':\r\n            return false\r\n        case 'toggle-music-is-loaded':\r\n            return !state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default MusicIsLoadedReducer","import {} from 'redux'\r\n\r\nconst initialState: MusicType = {\r\n    isType: false,\r\n    value: ''\r\n}\r\n\r\ninterface Actions {\r\n    type: string\r\n    payload?: any\r\n}\r\n\r\nfunction MusicTypeReducer(state: MusicType = initialState, actions: Actions): MusicType {\r\n    switch (actions.type) {\r\n        case 'clean-music-type':\r\n            return initialState\r\n        case 'active-music-type':\r\n            return {...state, isType: true}\r\n        case 'disactive-music-type':\r\n            return {...state, isType: false}\r\n        case 'toggle-music-type':\r\n            return {...state, isType: !state.isType}\r\n        case 'change-music-type':\r\n            return {...state, value: actions.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default MusicTypeReducer","import {} from 'redux'\r\n\r\nconst initialState: StoreStatePlaylist = {\r\n    name: '',\r\n    musics: [],\r\n    isPlaylist: false,\r\n    index: 0\r\n}\r\n\r\ninterface Actions {\r\n    type: string\r\n    payload?: any\r\n}\r\n\r\nfunction PlaylistReducer(state: StoreStatePlaylist = initialState, actions: Actions): StoreStatePlaylist {\r\n    switch (actions.type) {\r\n        case 'clean-playlist':\r\n            return {...initialState}\r\n        case 'active-playlist':\r\n            return {...state, isPlaylist: true}\r\n        case 'disactive-playlist':\r\n            return {...state, isPlaylist: false}\r\n        case 'toggle-playlist':\r\n            return {...state, isPlaylist: !state.isPlaylist}\r\n        case 'change-playlist':\r\n            return {...state, musics: actions.payload}\r\n        case 'rename-playlist':\r\n            return {...state, name: actions.payload}\r\n        case 'up-playlist':\r\n            if (state.index + 1 < state.musics.length) {\r\n                return {...state, index: state.index + 1}\r\n            } else {\r\n                return {...state}\r\n            }\r\n        case 'down-playlist':\r\n            if (state.index - 1 > -1) {\r\n                return {...state, index: state.index - 1}\r\n            } else {\r\n                return {...state}\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default PlaylistReducer","import {} from 'redux'\r\n\r\ninterface Actions {\r\n    type: string\r\n    payload: any\r\n    index: number\r\n    id: number\r\n}\r\n\r\nfunction PlaylistsReducer(state: Array<Playlist> = [], actions: Actions) {\r\n    switch (actions.type) {\r\n        case 'change-playlists':\r\n            return actions.payload\r\n        case 'insert-playlists':\r\n            const playlists = [...state]\r\n            playlists[actions.index].musics.push(actions.payload)\r\n            return playlists\r\n        case 'remove-playlists':\r\n            const playlists2 = [...state]\r\n            playlists2[actions.index].musics.splice(actions.payload, 1)\r\n            return playlists2\r\n        case 'rename-playlists':\r\n            const playlists3 = [...state]\r\n            playlists3[actions.index].name = actions.payload\r\n            return playlists3\r\n        case 'insert-new-playlists':\r\n            const playlists4 = [...state]\r\n            playlists4.push({\r\n                musics: [],\r\n                name: actions.payload,\r\n                public: false,\r\n                editable: true,\r\n                id: actions.id\r\n            })\r\n            return playlists4\r\n        case 'delete-playlists':\r\n            const playlists5 = [...state]\r\n            playlists5.splice(actions.index, 1)\r\n            return playlists5\r\n        case 'toggle-public-playlists':\r\n            const playlists6 = [...state]\r\n            playlists6[actions.index].public = !playlists6[actions.index].public\r\n            return playlists6\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default PlaylistsReducer","import {} from 'redux'\r\n\r\ninterface Actions {\r\n    type: string\r\n    payload: any\r\n}\r\n\r\nfunction Updates(state: number = 0, actions: Actions): Number {\r\n    switch (actions.type) {\r\n        case 'update':\r\n            return state + 1\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default Updates","import { createStore, combineReducers } from 'redux'\r\n\r\nimport actualIndex from './reducers/actualIndex.reducer'\r\nimport audio from './reducers/audio.reducer'\r\nimport music from './reducers/music.reducer'\r\nimport musicIsLoaded from './reducers/musicIsLoaded.reducer'\r\nimport musicType from './reducers/musicType.reducer'\r\nimport playlist from './reducers/playlist.reducer'\r\nimport playlists from './reducers/playlists.reducer'\r\nimport updates from './reducers/updates.reducer'\r\n\r\nconst reducers = combineReducers({\r\n    actualIndex,\r\n    audio,\r\n    music,\r\n    musicIsLoaded,\r\n    musicType,\r\n    playlist,\r\n    playlists,\r\n    updates\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store","import React, { Fragment } from 'react'\nimport { Provider } from 'react-redux'\n\nimport GlobalStyle from './styles/global'\nimport Router from './routes'\n\nimport store from './store'\n\nconst App = () => {\n  return <Fragment>\n    <Provider store={store}>\n      <Router />\n      <GlobalStyle />\n    </Provider>\n  </Fragment>\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)","import React, { Fragment } from 'react'\r\nimport { X } from 'react-feather'\r\n\r\nimport {\r\n    Container,\r\n    OperationButtonContainer,\r\n    OperationButton,\r\n    DragArea,\r\n    Title,\r\n    OperationButtonOther\r\n} from './styles'\r\n\r\nfunction Header(): JSX.Element {\r\n\r\n    function handleOperate(type: string): Function {\r\n        return function() {\r\n            const { remote } = window as any\r\n            if (remote) {\r\n                const currentWindow = remote.getCurrentWindow()\r\n                switch(type) {\r\n                    case 'close':\r\n                        currentWindow.close()\r\n                        return\r\n                    case 'minimize':\r\n                        currentWindow.minimize()\r\n                        return\r\n                    case 'maximize':\r\n                        if (currentWindow.isMaximized()) {\r\n                            currentWindow.restore()\r\n                        } else {\r\n                            currentWindow.maximize()\r\n                        }\r\n                        return\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return <Container>\r\n        {process.platform !== 'darwin' ? <Fragment>\r\n            <OperationButtonContainer>\r\n                <OperationButton\r\n                    onClick={handleOperate('close')}\r\n                    color=\"rgb(222, 85, 78)\"\r\n                    hover=\"rgb(202, 65, 58)\"\r\n                    active=\"rgb(172, 35, 28)\"\r\n                />\r\n                <OperationButton\r\n                    onClick={handleOperate('minimize')}\r\n                    color=\"rgb(238, 188, 63)\"\r\n                    hover=\"rgb(218, 168, 43)\"\r\n                    active=\"rgb(188, 138, 13)\"\r\n                />\r\n                <OperationButton\r\n                    onClick={handleOperate('maximize')}\r\n                    color=\"rgb(117, 200, 78)\"\r\n                    hover=\"rgb(97, 180, 58)\"\r\n                    active=\"rgb(67, 150, 28)\"\r\n                />\r\n            </OperationButtonContainer>\r\n            <DragArea>\r\n                <Title>Aram Music</Title>\r\n            </DragArea> \r\n        </Fragment> : <Fragment>\r\n            <DragArea>\r\n                <Title>Aram Music</Title>\r\n            </DragArea>\r\n            <OperationButtonContainer>\r\n            <OperationButtonOther onClick={handleOperate('minimize') as any}>\r\n                    <span style={{ marginBottom: 20 }}>_</span>\r\n                </OperationButtonOther>\r\n                <OperationButtonOther onClick={handleOperate('maximize') as any}>\r\n                    <span style={{ marginBottom: 8 }}>□</span>\r\n                </OperationButtonOther>\r\n                <OperationButtonOther onClick={handleOperate('close') as any}>\r\n                    <X\r\n                        size={30}\r\n                        color=\"#4c43df\"\r\n                    />\r\n                </OperationButtonOther>\r\n            </OperationButtonContainer>\r\n        </Fragment>}\r\n    </Container>\r\n}\r\n\r\nexport default Header"],"sourceRoot":""}